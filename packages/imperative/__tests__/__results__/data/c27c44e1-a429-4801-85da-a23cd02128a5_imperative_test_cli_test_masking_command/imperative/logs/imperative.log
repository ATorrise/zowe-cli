[2023/06/29 15:34:26.770] [TRACE] [AppSettings.js:49] Attempting to load settings file: C:\ourstuff\repos\dev\imperative\__tests__\__results__\data\c27c44e1-a429-4801-85da-a23cd02128a5_imperative_test_cli_test_masking_command\settings\imperative.json
[2023/06/29 15:34:26.772] [TRACE] [AppSettings.js:54] Executing missing file recovery.
[2023/06/29 15:34:26.772] [TRACE] [AppSettings.js:66] Settings were loaded
[2023/06/29 15:34:26.773] [TRACE] [AppSettings.js:67] Loaded Settings:
[2023/06/29 15:34:26.773] [TRACE] [AppSettings.js:68] { overrides: { CredentialManager: 'imperative-test-cli' } }
[2023/06/29 15:34:26.773] [DEBUG] [ConfigManagementFacility.js:61] ConfigManagementFacility.init() - Start
[2023/06/29 15:34:26.774] [DEBUG] [UpdateImpConfig.js:38] Adding definition = 'config'
[2023/06/29 15:34:26.774] [DEBUG] [ConfigManagementFacility.js:82] ConfigManagementFacility.init() - Success
[2023/06/29 15:34:26.775] [INFO] [Imperative.js:450] Set imperative log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_IMPERATIVE_LOG_LEVEL'
[2023/06/29 15:34:26.775] [INFO] [Imperative.js:468] Set app log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_APP_LOG_LEVEL'
[2023/06/29 15:34:26.776] [DEBUG] [DefaultCredentialManager.js:106] Loading Keytar module from C:\ourstuff\repos\dev\imperative\node_modules\keytar\lib\keytar.js
[2023/06/29 15:34:26.779] [DEBUG] [CredentialManagerFactory.js:136] Initialized the "Imperative Package Test CLI" credential manager for "imperative-test-cli".
[2023/06/29 15:34:26.799] [INFO] [Imperative.js:247] Loaded and validated config for 'imperative-test-cli'. Config details at trace level of logging.
[2023/06/29 15:34:26.800] [TRACE] [Imperative.js:248] The config object for 'imperative-test-cli' is:
{
  "commandModuleGlobs": [
    "**/cli/*/*definition!(.d).*s"
  ],
  "rootCommandDescription": "A test CLI for the 'imperative' imperative package",
  "defaultHome": "C:\\Users\\ej608771/.imperative-test-cli",
  "productDisplayName": "Imperative Package Test CLI",
  "name": "imperative-test-cli",
  "envVariablePrefix": "IMPERATIVE_TEST_CLI",
  "allowPlugins": false,
  "configAutoInitCommandConfig": {
    "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
    "provider": "Fruit Manager",
    "autoInit": {
      "options": [
        {
          "name": "host",
          "description": "Fruit host",
          "type": "string"
        },
        {
          "name": "port",
          "description": "Fruit port",
          "type": "number"
        },
        {
          "name": "user",
          "description": "Fruit username",
          "type": "string"
        },
        {
          "name": "password",
          "description": "Fruit password",
          "type": "string"
        },
        {
          "name": "token-type",
          "description": "Fruit token type",
          "type": "string"
        },
        {
          "name": "token-value",
          "description": "Fruit token value",
          "type": "string"
        }
      ]
    },
    "profileType": "base"
  },
  "profiles": [
    {
      "type": "secured",
      "schema": {
        "type": "object",
        "title": "Test Secured Fields",
        "description": "Test Secured Fields",
        "properties": {
          "info": {
            "type": "string",
            "includeInTemplate": true,
            "optionDefinition": {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "required": true
            }
          },
          "secret": {
            "type": "string",
            "secure": true,
            "optionDefinition": {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "required": true
            }
          }
        }
      }
    }
  ],
  "baseProfile": {
    "type": "base",
    "schema": {
      "type": "object",
      "title": "Secure Profile",
      "description": "Secure Profile",
      "properties": {
        "info": {
          "type": "string",
          "optionDefinition": {
            "name": "info",
            "description": "The info the keep in the profile.",
            "type": "string"
          }
        },
        "secret": {
          "type": "string",
          "secure": true,
          "includeInTemplate": true,
          "optionDefinition": {
            "name": "secret",
            "description": "The secret info the keep in the profile.",
            "type": "string"
          }
        },
        "host": {
          "type": "string",
          "optionDefinition": {
            "name": "host",
            "description": "Fruit host",
            "type": "string"
          }
        },
        "port": {
          "type": "number",
          "optionDefinition": {
            "name": "port",
            "description": "Fruit port",
            "type": "number"
          }
        },
        "user": {
          "type": "string",
          "optionDefinition": {
            "name": "user",
            "description": "Fruit username",
            "type": "string"
          },
          "secure": true
        },
        "password": {
          "type": "string",
          "optionDefinition": {
            "name": "password",
            "description": "Fruit password",
            "type": "string"
          },
          "secure": true
        },
        "tokenType": {
          "type": "string",
          "optionDefinition": {
            "name": "token-type",
            "description": "Fruit token type",
            "type": "string"
          }
        },
        "tokenValue": {
          "type": "string",
          "optionDefinition": {
            "name": "token-value",
            "description": "Fruit token value",
            "type": "string"
          },
          "secure": true
        }
      }
    },
    "authConfig": [
      {
        "serviceName": "fruit",
        "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
        "login": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string"
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string"
            }
          ]
        },
        "logout": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string"
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string"
            }
          ]
        }
      }
    ]
  },
  "definitions": [
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean"
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ]
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ]
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ]
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ]
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ]
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ]
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ]
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ]
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ]
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ]
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ]
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ]
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ]
        }
      ]
    }
  ],
  "overrides": {},
  "primaryTextColor": "yellow",
  "secondaryTextColor": "blue",
  "allowConfigGroup": true,
  "logging": {
    "imperativeLogging": {
      "apiName": "imperative",
      "category": "imperative"
    },
    "appLogging": {
      "apiName": "app",
      "category": "app"
    }
  }
}
[2023/06/29 15:34:26.801] [DEBUG] [DefinitionTreeResolver.js:89] Combining command definitions from caller directory C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib, 1 command definitions and 1 globs
[2023/06/29 15:34:26.810] [TRACE] [DefinitionTreeResolver.js:102] Matches for glob '**/cli/*/*definition!(.d).*s' from caller directory 'C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib':
cli/test/Test.definition.js 
[2023/06/29 15:34:26.811] [TRACE] [DefinitionTreeResolver.js:105] Attempting load of glob match cli/test/Test.definition.js
[2023/06/29 15:34:26.817] [TRACE] [DefinitionTreeResolver.js:107] Successfully loaded cli/test/Test.definition.js
[2023/06/29 15:34:26.841] [INFO] [Imperative.js:268] Inherited traits applied to CLI command tree children. Cmd tree details at trace level of logging.
[2023/06/29 15:34:26.842] [TRACE] [Imperative.js:270] The CLI command tree before being defined to yargs: {
  "name": "",
  "description": "A test CLI for the 'imperative' imperative package",
  "children": [
    {
      "name": "test",
      "description": "Test that various imperative features are working",
      "summary": "Test imperative features",
      "type": "group",
      "children": [
        {
          "name": "logging",
          "description": "Test that logging is working correctly.",
          "summary": "Test imperative logging",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler",
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-auto-store",
          "description": "Read some config",
          "summary": "Read some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-override",
          "description": "Override some config",
          "summary": "Override some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "someKey",
              "description": "Some key that should override password in prompting.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "masking",
          "description": "Test that masking is working correctly.",
          "summary": "Test imperative masking",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler",
          "positionals": [
            {
              "name": "test-argument",
              "description": "test argument",
              "type": "string",
              "required": true
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ],
              "group": "Options"
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ],
              "group": "Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "auto-init",
          "type": "command",
          "summary": "Automatically generate a config from Fruit Manager",
          "description": "Automatically generate a config from Fruit Manager",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
          "options": [
            {
              "name": "user-config",
              "aliases": [
                "uc"
              ],
              "description": "Save config in the user layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "global-config",
              "aliases": [
                "gc"
              ],
              "description": "Save config in the global layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "dry-run",
              "aliases": [
                "dr",
                "dry"
              ],
              "description": "Display the outcome of the initialization without saving",
              "type": "boolean",
              "conflictsWith": [
                "edit"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "overwrite",
              "aliases": [
                "ow"
              ],
              "description": "Replaces an existing configuration with a new configuration",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options",
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "f"
              ],
              "description": "Confirms the overwrite option",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            }
          ],
          "customize": {},
          "profile": {
            "optional": [
              "base"
            ]
          },
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "profiles",
      "description": "Create and manage configuration profiles.",
      "type": "group",
      "deprecatedReplacement": "The 'config init' command",
      "children": [
        {
          "name": "create",
          "description": "Create new configuration profiles.",
          "summary": "Create new configuration profiles",
          "aliases": [
            "cre"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config init' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Create a secured profile",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the secured profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Create a base profile",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the base profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "update",
          "description": "Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
          "summary": "Update existing profiles",
          "aliases": [
            "upd"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Update a secured profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Update a base profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "delete",
          "description": "Delete existing profiles.",
          "summary": "Delete existing profiles",
          "aliases": [
            "rm"
          ],
          "type": "group",
          "deprecatedReplacement": "Edit your Zowe V2 configuration imperative-test-cli.config.json",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Delete a secured profile.",
              "description": "Delete a secured profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the secured  profile to be deleted. You can also load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a secured profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Delete a base profile.",
              "description": "Delete a base profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the base  profile to be deleted. You can also load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a base profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "list",
          "description": "List profiles of the type {{type}}.",
          "summary": "List existing profiles",
          "aliases": [
            "ls"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config list' command",
          "children": [
            {
              "name": "secured-profiles",
              "aliases": [
                "secured"
              ],
              "summary": "List profiles of the type secured.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List secured  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type secured"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type secured and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profiles",
              "aliases": [
                "base"
              ],
              "summary": "List profiles of the type base.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List base  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type base"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type base and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "set-default",
          "summary": "Set which profiles are loaded by default",
          "description": "Set which profiles are loaded by default.",
          "type": "group",
          "aliases": [
            "set"
          ],
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Set the default\n profiles for the secured group",
              "description": "The secured set default-profiles command allows you to set the default profiles for this command group. When a secured command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the secured group. When you issue commands within the secured group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type secured to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Set the default\n profiles for the base group",
              "description": "The base set default-profiles command allows you to set the default profiles for this command group. When a base command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the base group. When you issue commands within the base group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type base to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "auth",
      "description": "Connect to token-based authentication services",
      "type": "group",
      "children": [
        {
          "name": "login",
          "description": "Log in to an authentication service.",
          "summary": "Log in to an authentication service",
          "aliases": [
            "li"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log in to fruit authentication service",
              "description": "Log in to fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "show-token",
                  "aliases": [
                    "st"
                  ],
                  "description": "Show the token when login is successful. If specified, does not save the token to a profile.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "logout",
          "description": "Log out of an authentication service.",
          "summary": "Log out of an authentication service",
          "aliases": [
            "lo"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log out of fruit authentication service",
              "description": "Log out of fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    }
  ],
  "type": "group",
  "options": [
    {
      "name": "version",
      "aliases": [
        "V"
      ],
      "description": "Display the current version of Imperative Package Test CLI",
      "type": "boolean",
      "conflictsWith": [
        "available-commands"
      ],
      "group": "Options"
    },
    {
      "name": "available-commands",
      "aliases": [
        "ac"
      ],
      "description": "Displays a list of available commands",
      "type": "boolean",
      "conflictsWith": [
        "version"
      ],
      "group": "Options"
    },
    {
      "name": "response-format-json",
      "aliases": [
        "rfj"
      ],
      "group": "Global Options",
      "description": "Produce JSON formatted data from a command",
      "type": "boolean"
    },
    {
      "name": "help",
      "aliases": [
        "h"
      ],
      "group": "Global Options",
      "description": "Display help text",
      "type": "boolean"
    },
    {
      "name": "help-web",
      "aliases": [
        "hw"
      ],
      "group": "Global Options",
      "description": "Display HTML help in browser",
      "type": "boolean"
    }
  ],
  "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src/handlers/DefaultRootCommandHandler",
  "isRoot": true,
  "aliases": [],
  "positionals": [],
  "passOn": [
    {
      "property": "options",
      "value": {
        "name": "help-examples",
        "group": "Global Options",
        "description": "Display examples for all the commands in a group",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "command"
        }
      ],
      "merge": true
    },
    {
      "property": "options",
      "value": {
        "name": "show-inputs-only",
        "group": "Global Options",
        "description": "Show command inputs and do not run the command",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "group"
        }
      ],
      "merge": true
    }
  ]
}
[2023/06/29 15:34:26.845] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:26.846] [TRACE] [YargsDefiner.js:61] {
  name: 'test',
  description: 'Test that various imperative features are working',
  summary: 'Test imperative features',
  type: 'group',
  children: [
    {
      name: 'logging',
      description: 'Test that logging is working correctly.',
      summary: 'Test imperative logging',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler',
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-auto-store',
      description: 'Read some config',
      summary: 'Read some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-override',
      description: 'Override some config',
      summary: 'Override some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'masking',
      description: 'Test that masking is working correctly.',
      summary: 'Test imperative masking',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler',
      positionals: [Array],
      options: [Array],
      aliases: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:26.847] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:26.850] [TRACE] [YargsDefiner.js:61] {
  name: 'config',
  type: 'group',
  summary: 'Manage JSON project and global configuration',
  description: 'Manage JSON project and global configuration',
  children: [
    {
      name: 'list',
      aliases: [Array],
      type: 'command',
      summary: 'list config properties',
      description: 'List config properties',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'secure',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler',
      summary: 'secure configuration properties',
      description: 'prompt for secure configuration properties',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'set',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler',
      summary: 'set configuration property',
      description: 'create or update a configuration property',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'init',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler',
      summary: 'init config files',
      description: 'Initialize config files. Defaults to initializing "imperative-test-cli.config.json" in the current working directory unless otherwise specified.\n' +
        '\n' +
        'Use "--user-config" to init "imperative-test-cli.config.user.json". Use "--global-config" to initialize the configuration files in your home "~/.zowe" directory.\n' +
        '\n' +
        'Use "--no-prompt" to skip prompting for values in a CI environment.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'schema',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler',
      summary: 'dumps the JSON schema for the config',
      description: "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'profiles',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler',
      summary: 'displays profile paths',
      description: 'Displays profile paths.',
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'edit',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler',
      summary: 'edit config files',
      description: "Edit an existing config file in your system's default text editor.\n" +
        '\n' +
        'In a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'import',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler',
      summary: 'import config files',
      description: 'Import config files from another location on disk or from an Internet URL.\n' +
        '\n' +
        'If the config `$schema` property points to a relative path, the schema will also be imported.',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'convert-profiles',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler',
      summary: 'Convert profiles to team config',
      description: 'Convert v1 profiles to a global imperative-test-cli.config.json file.',
      options: [Array],
      examples: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'report-env',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler',
      summary: 'Report the state of your working environment',
      description: 'Reports key items from your environment and identifies problem conditions',
      examples: [Array],
      options: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'update-schemas',
      aliases: [Array],
      type: 'command',
      summary: 'update schema files',
      description: 'Update schema files by looking up the directory structure.\n' +
        '\n' +
        'Schema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler',
      positionals: [],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'auto-init',
      type: 'command',
      summary: 'Automatically generate a config from Fruit Manager',
      description: 'Automatically generate a config from Fruit Manager',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler',
      options: [Array],
      customize: {},
      profile: [Object],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:26.851] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:26.851] [TRACE] [YargsDefiner.js:61] {
  name: 'profiles',
  description: 'Create and manage configuration profiles.',
  type: 'group',
  deprecatedReplacement: "The 'config init' command",
  children: [
    {
      name: 'create',
      description: 'Create new configuration profiles.',
      summary: 'Create new configuration profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config init' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'update',
      description: 'Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.',
      summary: 'Update existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'delete',
      description: 'Delete existing profiles.',
      summary: 'Delete existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: 'Edit your Zowe V2 configuration imperative-test-cli.config.json',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'list',
      description: 'List profiles of the type {{type}}.',
      summary: 'List existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config list' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'set-default',
      summary: 'Set which profiles are loaded by default',
      description: 'Set which profiles are loaded by default.',
      type: 'group',
      aliases: [Array],
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:26.853] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:26.853] [TRACE] [YargsDefiner.js:61] {
  name: 'auth',
  description: 'Connect to token-based authentication services',
  type: 'group',
  children: [
    {
      name: 'login',
      description: 'Log in to an authentication service.',
      summary: 'Log in to an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'logout',
      description: 'Log out of an authentication service.',
      summary: 'Log out of an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:26.854] [TRACE] [main.js:18] This is a trace message after init!
[2023/06/29 15:34:26.854] [DEBUG] [main.js:19] This is a debug message after init!
[2023/06/29 15:34:26.855] [INFO] [main.js:20] This is an info message after init!
[2023/06/29 15:34:26.855] [WARN] [main.js:21] This is a warn message after init!
[2023/06/29 15:34:26.855] [ERROR] [main.js:22] This is an error message after init!
[2023/06/29 15:34:26.856] [FATAL] [main.js:23] This is a fatal message after init!
[2023/06/29 15:34:26.861] [DEBUG] [CommandYargs.js:76] Defining command: list
[2023/06/29 15:34:26.862] [DEBUG] [CommandYargs.js:175] Building positional string from: list
[2023/06/29 15:34:26.862] [DEBUG] [CommandYargs.js:181] Positional String:  [property]
[2023/06/29 15:34:26.863] [DEBUG] [CommandYargs.js:76] Defining command: secure
[2023/06/29 15:34:26.864] [DEBUG] [CommandYargs.js:175] Building positional string from: secure
[2023/06/29 15:34:26.864] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:26.865] [DEBUG] [CommandYargs.js:76] Defining command: set
[2023/06/29 15:34:26.865] [DEBUG] [CommandYargs.js:175] Building positional string from: set
[2023/06/29 15:34:26.866] [DEBUG] [CommandYargs.js:181] Positional String:  [property] [value]
[2023/06/29 15:34:26.866] [DEBUG] [CommandYargs.js:76] Defining command: init
[2023/06/29 15:34:26.867] [DEBUG] [CommandYargs.js:175] Building positional string from: init
[2023/06/29 15:34:26.867] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:26.868] [DEBUG] [CommandYargs.js:76] Defining command: schema
[2023/06/29 15:34:26.868] [DEBUG] [CommandYargs.js:175] Building positional string from: schema
[2023/06/29 15:34:26.868] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:26.869] [DEBUG] [CommandYargs.js:76] Defining command: profiles
[2023/06/29 15:34:26.869] [DEBUG] [CommandYargs.js:175] Building positional string from: profiles
[2023/06/29 15:34:26.870] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:26.870] [DEBUG] [CommandYargs.js:76] Defining command: edit
[2023/06/29 15:34:26.871] [DEBUG] [CommandYargs.js:175] Building positional string from: edit
[2023/06/29 15:34:26.871] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:26.872] [DEBUG] [CommandYargs.js:76] Defining command: import
[2023/06/29 15:34:26.872] [DEBUG] [CommandYargs.js:175] Building positional string from: import
[2023/06/29 15:34:26.873] [DEBUG] [CommandYargs.js:181] Positional String:  [location]
[2023/06/29 15:34:26.874] [DEBUG] [CommandYargs.js:76] Defining command: convert-profiles
[2023/06/29 15:34:26.874] [DEBUG] [CommandYargs.js:175] Building positional string from: convert-profiles
[2023/06/29 15:34:26.875] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:26.877] [DEBUG] [CommandYargs.js:76] Defining command: report-env
[2023/06/29 15:34:26.877] [DEBUG] [CommandYargs.js:175] Building positional string from: report-env
[2023/06/29 15:34:26.878] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:26.878] [DEBUG] [CommandYargs.js:76] Defining command: update-schemas
[2023/06/29 15:34:26.879] [DEBUG] [CommandYargs.js:175] Building positional string from: update-schemas
[2023/06/29 15:34:26.879] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:26.880] [DEBUG] [CommandYargs.js:76] Defining command: auto-init
[2023/06/29 15:34:26.880] [DEBUG] [CommandYargs.js:175] Building positional string from: auto-init
[2023/06/29 15:34:26.881] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:26.883] [DEBUG] [CommandYargs.js:95] Defining command builder for: init
[2023/06/29 15:34:26.886] [DEBUG] [CommandYargs.js:106] Handler invoked for: init
[2023/06/29 15:34:26.887] [DEBUG] [CommandYargs.js:119] Executing Handlers: init
[2023/06/29 15:34:26.887] [DEBUG] [CommandYargs.js:137] Executing Handlers (1 total)
[2023/06/29 15:34:26.908] [INFO] [CommandProcessor.js:271] Invoking command "init"...
[2023/06/29 15:34:26.923] [INFO] [CommandProcessor.js:272] Command issued:

imperative-test-cli config init --no-prompt


[2023/06/29 15:34:26.924] [TRACE] [CommandProcessor.js:273] Invoke parameters:
{
  arguments: {
    _: [ 'config', 'init' ],
    prompt: false,
    version: undefined,
    V: undefined,
    'available-commands': undefined,
    ac: undefined,
    availableCommands: undefined,
    'response-format-json': undefined,
    rfj: undefined,
    responseFormatJson: undefined,
    help: undefined,
    h: undefined,
    'help-web': undefined,
    hw: undefined,
    helpWeb: undefined,
    'help-examples': undefined,
    helpExamples: undefined,
    'global-config': undefined,
    gc: undefined,
    globalConfig: undefined,
    'user-config': undefined,
    uc: undefined,
    userConfig: undefined,
    overwrite: undefined,
    ow: undefined,
    'for-sure': undefined,
    fs: undefined,
    forSure: undefined,
    'dry-run': undefined,
    dr: undefined,
    dry: undefined,
    dryRun: undefined,
    edit: undefined,
    e: undefined,
    'show-inputs-only': undefined,
    showInputsOnly: undefined,
    '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js'
  },
  silent: false,
  responseFormat: 'default'
}
[2023/06/29 15:34:26.925] [TRACE] [CommandProcessor.js:274] Command definition:
{
  name: 'init',
  type: 'command',
  handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler',
  summary: 'init config files',
  description: 'Initialize config files. Defaults to initializing "imperative-test-cli.config.json" in the current working directory unless otherwise specified.\n' +
    '\n' +
    'Use "--user-config" to init "imperative-test-cli.config.user.json". Use "--global-config" to initialize the configuration files in your home "~/.zowe" directory.\n' +
    '\n' +
    'Use "--no-prompt" to skip prompting for values in a CI environment.',
  options: [
    {
      name: 'global-config',
      description: 'Target the global config files.',
      aliases: [ 'gc' ],
      type: 'boolean',
      defaultValue: false,
      group: 'Options'
    },
    {
      name: 'user-config',
      description: 'Target the user config files.',
      aliases: [ 'uc' ],
      type: 'boolean',
      defaultValue: false,
      group: 'Options'
    },
    {
      name: 'prompt',
      description: 'Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.',
      type: 'boolean',
      defaultValue: true,
      group: 'Options',
      aliases: []
    },
    {
      name: 'overwrite',
      description: 'Replace existing config files instead of merging the new changes.',
      aliases: [ 'ow' ],
      type: 'boolean',
      conflictsWith: [ 'dry-run' ],
      implies: [ 'for-sure' ],
      group: 'Options'
    },
    {
      name: 'for-sure',
      aliases: [ 'fs' ],
      description: 'Confirms the overwrite option.',
      type: 'boolean',
      defaultValue: false,
      group: 'Options'
    },
    {
      name: 'dry-run',
      description: 'Display the outcome of the initialization without saving it.',
      aliases: [ 'dr', 'dry' ],
      type: 'boolean',
      conflictsWith: [ 'edit', 'overwrite', 'prompt' ],
      group: 'Options'
    },
    {
      name: 'edit',
      aliases: [ 'e' ],
      description: 'Open in editor after initializing the configuration',
      type: 'boolean',
      conflictsWith: [ 'dry-run' ],
      group: 'Options'
    },
    {
      name: 'show-inputs-only',
      group: 'Global Options',
      description: 'Show command inputs and do not run the command',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [ 'rfj' ],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [ 'h' ],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [ 'hw' ],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  examples: [
    {
      description: 'Initialize configuration files in your home "~/.zowe" directory',
      options: '--global-config'
    },
    {
      description: 'Do a dry run of initializing configuration files in your home "~/.zowe" directory',
      options: '--global-config --dry-run'
    },
    {
      description: 'Initialize the user config files',
      options: '--user-config'
    },
    {
      description: 'Initialize the user config files and do not prompt for secure values',
      options: '--user-config --prompt false'
    },
    {
      description: 'Do a dry run of initializing the user config files and do not prompt for secure values',
      options: '--user-config --prompt false --dry-run'
    },
    {
      description: 'Overwrite any existing global config files',
      options: '--global-config --overwrite --for-sure'
    },
    {
      description: 'Overwrite any existing user config files',
      options: '--user-config --overwrite --for-sure'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: [],
  children: []
}
[2023/06/29 15:34:26.925] [TRACE] [CommandProcessor.js:852] Constructing response object for "init" command...
[2023/06/29 15:34:26.926] [INFO] [CommandProcessor.js:307] Preparing (loading profiles, reading stdin, etc.) execution of "init" command...
[2023/06/29 15:34:26.927] [TRACE] [CommandProcessor.js:717] Base set of arguments from Yargs parse:
{
  _: [ 'config', 'init' ],
  prompt: false,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js'
}
[2023/06/29 15:34:26.928] [TRACE] [CommandProcessor.js:720] Set of options and positionals defined on the command:
[
  {
    name: 'global-config',
    description: 'Target the global config files.',
    aliases: [ 'gc' ],
    type: 'boolean',
    defaultValue: false,
    group: 'Options'
  },
  {
    name: 'user-config',
    description: 'Target the user config files.',
    aliases: [ 'uc' ],
    type: 'boolean',
    defaultValue: false,
    group: 'Options'
  },
  {
    name: 'prompt',
    description: 'Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.',
    type: 'boolean',
    defaultValue: true,
    group: 'Options',
    aliases: []
  },
  {
    name: 'overwrite',
    description: 'Replace existing config files instead of merging the new changes.',
    aliases: [ 'ow' ],
    type: 'boolean',
    conflictsWith: [ 'dry-run' ],
    implies: [ 'for-sure' ],
    group: 'Options'
  },
  {
    name: 'for-sure',
    aliases: [ 'fs' ],
    description: 'Confirms the overwrite option.',
    type: 'boolean',
    defaultValue: false,
    group: 'Options'
  },
  {
    name: 'dry-run',
    description: 'Display the outcome of the initialization without saving it.',
    aliases: [ 'dr', 'dry' ],
    type: 'boolean',
    conflictsWith: [ 'edit', 'overwrite', 'prompt' ],
    group: 'Options'
  },
  {
    name: 'edit',
    aliases: [ 'e' ],
    description: 'Open in editor after initializing the configuration',
    type: 'boolean',
    conflictsWith: [ 'dry-run' ],
    group: 'Options'
  },
  {
    name: 'show-inputs-only',
    group: 'Global Options',
    description: 'Show command inputs and do not run the command',
    type: 'boolean',
    aliases: []
  },
  {
    name: 'response-format-json',
    aliases: [ 'rfj' ],
    group: 'Global Options',
    description: 'Produce JSON formatted data from a command',
    type: 'boolean'
  },
  {
    name: 'help',
    aliases: [ 'h' ],
    group: 'Global Options',
    description: 'Display help text',
    type: 'boolean'
  },
  {
    name: 'help-web',
    aliases: [ 'hw' ],
    group: 'Global Options',
    description: 'Display HTML help in browser',
    type: 'boolean'
  }
]
[2023/06/29 15:34:26.929] [TRACE] [CommandProcessor.js:725] Arguments extracted from :
{
  _: [ 'config', 'init' ],
  prompt: false,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js'
}
[2023/06/29 15:34:26.929] [TRACE] [CommandProcessor.js:727] Arguments merged :
{
  _: [ 'config', 'init' ],
  prompt: false,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js'
}
[2023/06/29 15:34:26.930] [TRACE] [CommandProcessor.js:729] Reading stdin for "init" command...
[2023/06/29 15:34:26.931] [DEBUG] [SharedOptions.js:61] Standard input reading not requested. Skipping stdin read
[2023/06/29 15:34:26.951] [TRACE] [CommandProcessor.js:788] Arguments extracted from the config:
{}
[2023/06/29 15:34:26.952] [TRACE] [CommandProcessor.js:791] Loading profiles for "init" command. Profile definitions: undefined
[2023/06/29 15:34:26.952] [TRACE] [CommandProfileLoader.js:53] Profile loader created for command: init
[2023/06/29 15:34:26.953] [INFO] [CommandProfileLoader.js:83] Request to load profiles for command: init...
[2023/06/29 15:34:26.953] [TRACE] [CommandProfileLoader.js:84] Profile load arguments supplied:
{
  _: [ 'config', 'init' ],
  prompt: false,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js'
}
[2023/06/29 15:34:26.954] [TRACE] [CommandProcessor.js:797] Profiles loaded for "init" command:
CommandProfiles { mMetaMap: Map(0) {}, mMap: Map(0) {} }
[2023/06/29 15:34:26.955] [TRACE] [CommandProcessor.js:828] Full argument object constructed:
{
  _: [ 'config', 'init' ],
  prompt: false,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  globalConfig: false,
  'global-config': false,
  gc: false,
  userConfig: false,
  'user-config': false,
  uc: false,
  forSure: false,
  'for-sure': false,
  fs: false
}
[2023/06/29 15:34:26.955] [TRACE] [CommandProcessor.js:852] Constructing response object for "init" command...
[2023/06/29 15:34:26.956] [INFO] [CommandProcessor.js:211] Performing syntax validation for command "init"...
[2023/06/29 15:34:26.971] [TRACE] [SyntaxValidator.js:115] no unknown positionals. Length of positional arguments was: %s. Contents of _ were %s, Expected "_" to have length of %s
[2023/06/29 15:34:26.980] [INFO] [CommandProcessor.js:467] Invoking process method of handler for "init" command.
[2023/06/29 15:34:26.980] [INFO] [CommandProcessor.js:879] Requiring handler "C:\ourstuff\repos\dev\imperative\lib\imperative\src\config\cmd\init\init.handler" for command "C:\ourstuff\repos\dev\imperative\lib\imperative\src\config\cmd\init\init.handler"...
[2023/06/29 15:34:26.986] [INFO] [CommandProcessor.js:882] Handler "C:\ourstuff\repos\dev\imperative\lib\imperative\src\config\cmd\init\init.handler" for command "init" successfully loaded/required.
[2023/06/29 15:34:27.001] [INFO] [CommandProcessor.js:498] Handler for command "init" succeeded.
[2023/06/29 15:34:27.002] [INFO] [CommandProcessor.js:933] Command "init" completed with success flag: "true"
[2023/06/29 15:34:27.003] [TRACE] [CommandProcessor.js:934] Command "init" finished. Response object:
{
  success: true,
  exitCode: 0,
  message: '',
  stdout: <Buffer 53 61 76 65 64 20 63 6f 6e 66 69 67 20 74 65 6d 70 6c 61 74 65 20 74 6f 20 43 3a 5c 6f 75 72 73 74 75 66 66 5c 72 65 70 6f 73 5c 64 65 76 5c 69 6d 70 ... 150 more bytes>,
  stderr: <Buffer >,
  data: {},
  error: undefined
}
[2023/06/29 15:34:31.735] [TRACE] [AppSettings.js:49] Attempting to load settings file: C:\ourstuff\repos\dev\imperative\__tests__\__results__\data\c27c44e1-a429-4801-85da-a23cd02128a5_imperative_test_cli_test_masking_command\settings\imperative.json
[2023/06/29 15:34:31.736] [TRACE] [AppSettings.js:66] Settings were loaded
[2023/06/29 15:34:31.736] [TRACE] [AppSettings.js:67] Loaded Settings:
[2023/06/29 15:34:31.737] [TRACE] [AppSettings.js:68] { overrides: { CredentialManager: 'imperative-test-cli' } }
[2023/06/29 15:34:31.737] [DEBUG] [ConfigManagementFacility.js:61] ConfigManagementFacility.init() - Start
[2023/06/29 15:34:31.738] [DEBUG] [UpdateImpConfig.js:38] Adding definition = 'config'
[2023/06/29 15:34:31.738] [DEBUG] [ConfigManagementFacility.js:82] ConfigManagementFacility.init() - Success
[2023/06/29 15:34:31.738] [INFO] [Imperative.js:450] Set imperative log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_IMPERATIVE_LOG_LEVEL'
[2023/06/29 15:34:31.739] [INFO] [Imperative.js:468] Set app log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_APP_LOG_LEVEL'
[2023/06/29 15:34:31.740] [DEBUG] [DefaultCredentialManager.js:106] Loading Keytar module from C:\ourstuff\repos\dev\imperative\node_modules\keytar\lib\keytar.js
[2023/06/29 15:34:31.744] [DEBUG] [CredentialManagerFactory.js:136] Initialized the "Imperative Package Test CLI" credential manager for "imperative-test-cli".
[2023/06/29 15:34:31.749] [INFO] [Imperative.js:247] Loaded and validated config for 'imperative-test-cli'. Config details at trace level of logging.
[2023/06/29 15:34:31.749] [TRACE] [Imperative.js:248] The config object for 'imperative-test-cli' is:
{
  "commandModuleGlobs": [
    "**/cli/*/*definition!(.d).*s"
  ],
  "rootCommandDescription": "A test CLI for the 'imperative' imperative package",
  "defaultHome": "C:\\Users\\ej608771/.imperative-test-cli",
  "productDisplayName": "Imperative Package Test CLI",
  "name": "imperative-test-cli",
  "envVariablePrefix": "IMPERATIVE_TEST_CLI",
  "allowPlugins": false,
  "configAutoInitCommandConfig": {
    "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
    "provider": "Fruit Manager",
    "autoInit": {
      "options": [
        {
          "name": "host",
          "description": "Fruit host",
          "type": "string"
        },
        {
          "name": "port",
          "description": "Fruit port",
          "type": "number"
        },
        {
          "name": "user",
          "description": "Fruit username",
          "type": "string"
        },
        {
          "name": "password",
          "description": "Fruit password",
          "type": "string"
        },
        {
          "name": "token-type",
          "description": "Fruit token type",
          "type": "string"
        },
        {
          "name": "token-value",
          "description": "Fruit token value",
          "type": "string"
        }
      ]
    },
    "profileType": "base"
  },
  "profiles": [
    {
      "type": "secured",
      "schema": {
        "type": "object",
        "title": "Test Secured Fields",
        "description": "Test Secured Fields",
        "properties": {
          "info": {
            "type": "string",
            "includeInTemplate": true,
            "optionDefinition": {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "required": true
            }
          },
          "secret": {
            "type": "string",
            "secure": true,
            "optionDefinition": {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "required": true
            }
          }
        }
      }
    }
  ],
  "baseProfile": {
    "type": "base",
    "schema": {
      "type": "object",
      "title": "Secure Profile",
      "description": "Secure Profile",
      "properties": {
        "info": {
          "type": "string",
          "optionDefinition": {
            "name": "info",
            "description": "The info the keep in the profile.",
            "type": "string"
          }
        },
        "secret": {
          "type": "string",
          "secure": true,
          "includeInTemplate": true,
          "optionDefinition": {
            "name": "secret",
            "description": "The secret info the keep in the profile.",
            "type": "string"
          }
        },
        "host": {
          "type": "string",
          "optionDefinition": {
            "name": "host",
            "description": "Fruit host",
            "type": "string"
          }
        },
        "port": {
          "type": "number",
          "optionDefinition": {
            "name": "port",
            "description": "Fruit port",
            "type": "number"
          }
        },
        "user": {
          "type": "string",
          "optionDefinition": {
            "name": "user",
            "description": "Fruit username",
            "type": "string"
          },
          "secure": true
        },
        "password": {
          "type": "string",
          "optionDefinition": {
            "name": "password",
            "description": "Fruit password",
            "type": "string"
          },
          "secure": true
        },
        "tokenType": {
          "type": "string",
          "optionDefinition": {
            "name": "token-type",
            "description": "Fruit token type",
            "type": "string"
          }
        },
        "tokenValue": {
          "type": "string",
          "optionDefinition": {
            "name": "token-value",
            "description": "Fruit token value",
            "type": "string"
          },
          "secure": true
        }
      }
    },
    "authConfig": [
      {
        "serviceName": "fruit",
        "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
        "login": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string"
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string"
            }
          ]
        },
        "logout": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string"
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string"
            }
          ]
        }
      }
    ]
  },
  "definitions": [
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean"
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ]
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ]
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ]
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ]
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ]
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ]
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ]
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ]
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ]
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ]
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ]
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ]
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ]
        }
      ]
    }
  ],
  "overrides": {},
  "primaryTextColor": "yellow",
  "secondaryTextColor": "blue",
  "allowConfigGroup": true,
  "logging": {
    "imperativeLogging": {
      "apiName": "imperative",
      "category": "imperative"
    },
    "appLogging": {
      "apiName": "app",
      "category": "app"
    }
  }
}
[2023/06/29 15:34:31.751] [DEBUG] [DefinitionTreeResolver.js:89] Combining command definitions from caller directory C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib, 1 command definitions and 1 globs
[2023/06/29 15:34:31.761] [TRACE] [DefinitionTreeResolver.js:102] Matches for glob '**/cli/*/*definition!(.d).*s' from caller directory 'C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib':
cli/test/Test.definition.js 
[2023/06/29 15:34:31.762] [TRACE] [DefinitionTreeResolver.js:105] Attempting load of glob match cli/test/Test.definition.js
[2023/06/29 15:34:31.767] [TRACE] [DefinitionTreeResolver.js:107] Successfully loaded cli/test/Test.definition.js
[2023/06/29 15:34:31.780] [INFO] [Imperative.js:268] Inherited traits applied to CLI command tree children. Cmd tree details at trace level of logging.
[2023/06/29 15:34:31.781] [TRACE] [Imperative.js:270] The CLI command tree before being defined to yargs: {
  "name": "",
  "description": "A test CLI for the 'imperative' imperative package",
  "children": [
    {
      "name": "test",
      "description": "Test that various imperative features are working",
      "summary": "Test imperative features",
      "type": "group",
      "children": [
        {
          "name": "logging",
          "description": "Test that logging is working correctly.",
          "summary": "Test imperative logging",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler",
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-auto-store",
          "description": "Read some config",
          "summary": "Read some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-override",
          "description": "Override some config",
          "summary": "Override some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "someKey",
              "description": "Some key that should override password in prompting.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "masking",
          "description": "Test that masking is working correctly.",
          "summary": "Test imperative masking",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler",
          "positionals": [
            {
              "name": "test-argument",
              "description": "test argument",
              "type": "string",
              "required": true
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ],
              "group": "Options"
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ],
              "group": "Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "auto-init",
          "type": "command",
          "summary": "Automatically generate a config from Fruit Manager",
          "description": "Automatically generate a config from Fruit Manager",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
          "options": [
            {
              "name": "user-config",
              "aliases": [
                "uc"
              ],
              "description": "Save config in the user layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "global-config",
              "aliases": [
                "gc"
              ],
              "description": "Save config in the global layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "dry-run",
              "aliases": [
                "dr",
                "dry"
              ],
              "description": "Display the outcome of the initialization without saving",
              "type": "boolean",
              "conflictsWith": [
                "edit"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "overwrite",
              "aliases": [
                "ow"
              ],
              "description": "Replaces an existing configuration with a new configuration",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options",
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "f"
              ],
              "description": "Confirms the overwrite option",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            }
          ],
          "customize": {},
          "profile": {
            "optional": [
              "base"
            ]
          },
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "profiles",
      "description": "Create and manage configuration profiles.",
      "type": "group",
      "deprecatedReplacement": "The 'config init' command",
      "children": [
        {
          "name": "create",
          "description": "Create new configuration profiles.",
          "summary": "Create new configuration profiles",
          "aliases": [
            "cre"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config init' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Create a secured profile",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the secured profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Create a base profile",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the base profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "update",
          "description": "Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
          "summary": "Update existing profiles",
          "aliases": [
            "upd"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Update a secured profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Update a base profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "delete",
          "description": "Delete existing profiles.",
          "summary": "Delete existing profiles",
          "aliases": [
            "rm"
          ],
          "type": "group",
          "deprecatedReplacement": "Edit your Zowe V2 configuration imperative-test-cli.config.json",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Delete a secured profile.",
              "description": "Delete a secured profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the secured  profile to be deleted. You can also load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a secured profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Delete a base profile.",
              "description": "Delete a base profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the base  profile to be deleted. You can also load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a base profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "list",
          "description": "List profiles of the type {{type}}.",
          "summary": "List existing profiles",
          "aliases": [
            "ls"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config list' command",
          "children": [
            {
              "name": "secured-profiles",
              "aliases": [
                "secured"
              ],
              "summary": "List profiles of the type secured.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List secured  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type secured"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type secured and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profiles",
              "aliases": [
                "base"
              ],
              "summary": "List profiles of the type base.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List base  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type base"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type base and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "set-default",
          "summary": "Set which profiles are loaded by default",
          "description": "Set which profiles are loaded by default.",
          "type": "group",
          "aliases": [
            "set"
          ],
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Set the default\n profiles for the secured group",
              "description": "The secured set default-profiles command allows you to set the default profiles for this command group. When a secured command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the secured group. When you issue commands within the secured group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type secured to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Set the default\n profiles for the base group",
              "description": "The base set default-profiles command allows you to set the default profiles for this command group. When a base command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the base group. When you issue commands within the base group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type base to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "auth",
      "description": "Connect to token-based authentication services",
      "type": "group",
      "children": [
        {
          "name": "login",
          "description": "Log in to an authentication service.",
          "summary": "Log in to an authentication service",
          "aliases": [
            "li"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log in to fruit authentication service",
              "description": "Log in to fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "show-token",
                  "aliases": [
                    "st"
                  ],
                  "description": "Show the token when login is successful. If specified, does not save the token to a profile.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "logout",
          "description": "Log out of an authentication service.",
          "summary": "Log out of an authentication service",
          "aliases": [
            "lo"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log out of fruit authentication service",
              "description": "Log out of fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    }
  ],
  "type": "group",
  "options": [
    {
      "name": "version",
      "aliases": [
        "V"
      ],
      "description": "Display the current version of Imperative Package Test CLI",
      "type": "boolean",
      "conflictsWith": [
        "available-commands"
      ],
      "group": "Options"
    },
    {
      "name": "available-commands",
      "aliases": [
        "ac"
      ],
      "description": "Displays a list of available commands",
      "type": "boolean",
      "conflictsWith": [
        "version"
      ],
      "group": "Options"
    },
    {
      "name": "response-format-json",
      "aliases": [
        "rfj"
      ],
      "group": "Global Options",
      "description": "Produce JSON formatted data from a command",
      "type": "boolean"
    },
    {
      "name": "help",
      "aliases": [
        "h"
      ],
      "group": "Global Options",
      "description": "Display help text",
      "type": "boolean"
    },
    {
      "name": "help-web",
      "aliases": [
        "hw"
      ],
      "group": "Global Options",
      "description": "Display HTML help in browser",
      "type": "boolean"
    }
  ],
  "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src/handlers/DefaultRootCommandHandler",
  "isRoot": true,
  "aliases": [],
  "positionals": [],
  "passOn": [
    {
      "property": "options",
      "value": {
        "name": "help-examples",
        "group": "Global Options",
        "description": "Display examples for all the commands in a group",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "command"
        }
      ],
      "merge": true
    },
    {
      "property": "options",
      "value": {
        "name": "show-inputs-only",
        "group": "Global Options",
        "description": "Show command inputs and do not run the command",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "group"
        }
      ],
      "merge": true
    }
  ]
}
[2023/06/29 15:34:31.784] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:31.785] [TRACE] [YargsDefiner.js:61] {
  name: 'test',
  description: 'Test that various imperative features are working',
  summary: 'Test imperative features',
  type: 'group',
  children: [
    {
      name: 'logging',
      description: 'Test that logging is working correctly.',
      summary: 'Test imperative logging',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler',
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-auto-store',
      description: 'Read some config',
      summary: 'Read some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-override',
      description: 'Override some config',
      summary: 'Override some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'masking',
      description: 'Test that masking is working correctly.',
      summary: 'Test imperative masking',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler',
      positionals: [Array],
      options: [Array],
      aliases: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:31.786] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:31.788] [TRACE] [YargsDefiner.js:61] {
  name: 'config',
  type: 'group',
  summary: 'Manage JSON project and global configuration',
  description: 'Manage JSON project and global configuration',
  children: [
    {
      name: 'list',
      aliases: [Array],
      type: 'command',
      summary: 'list config properties',
      description: 'List config properties',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'secure',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler',
      summary: 'secure configuration properties',
      description: 'prompt for secure configuration properties',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'set',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler',
      summary: 'set configuration property',
      description: 'create or update a configuration property',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'init',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler',
      summary: 'init config files',
      description: 'Initialize config files. Defaults to initializing "imperative-test-cli.config.json" in the current working directory unless otherwise specified.\n' +
        '\n' +
        'Use "--user-config" to init "imperative-test-cli.config.user.json". Use "--global-config" to initialize the configuration files in your home "~/.zowe" directory.\n' +
        '\n' +
        'Use "--no-prompt" to skip prompting for values in a CI environment.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'schema',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler',
      summary: 'dumps the JSON schema for the config',
      description: "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'profiles',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler',
      summary: 'displays profile paths',
      description: 'Displays profile paths.',
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'edit',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler',
      summary: 'edit config files',
      description: "Edit an existing config file in your system's default text editor.\n" +
        '\n' +
        'In a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'import',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler',
      summary: 'import config files',
      description: 'Import config files from another location on disk or from an Internet URL.\n' +
        '\n' +
        'If the config `$schema` property points to a relative path, the schema will also be imported.',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'convert-profiles',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler',
      summary: 'Convert profiles to team config',
      description: 'Convert v1 profiles to a global imperative-test-cli.config.json file.',
      options: [Array],
      examples: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'report-env',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler',
      summary: 'Report the state of your working environment',
      description: 'Reports key items from your environment and identifies problem conditions',
      examples: [Array],
      options: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'update-schemas',
      aliases: [Array],
      type: 'command',
      summary: 'update schema files',
      description: 'Update schema files by looking up the directory structure.\n' +
        '\n' +
        'Schema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler',
      positionals: [],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'auto-init',
      type: 'command',
      summary: 'Automatically generate a config from Fruit Manager',
      description: 'Automatically generate a config from Fruit Manager',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler',
      options: [Array],
      customize: {},
      profile: [Object],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:31.789] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:31.790] [TRACE] [YargsDefiner.js:61] {
  name: 'profiles',
  description: 'Create and manage configuration profiles.',
  type: 'group',
  deprecatedReplacement: "The 'config init' command",
  children: [
    {
      name: 'create',
      description: 'Create new configuration profiles.',
      summary: 'Create new configuration profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config init' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'update',
      description: 'Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.',
      summary: 'Update existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'delete',
      description: 'Delete existing profiles.',
      summary: 'Delete existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: 'Edit your Zowe V2 configuration imperative-test-cli.config.json',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'list',
      description: 'List profiles of the type {{type}}.',
      summary: 'List existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config list' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'set-default',
      summary: 'Set which profiles are loaded by default',
      description: 'Set which profiles are loaded by default.',
      type: 'group',
      aliases: [Array],
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:31.791] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:31.792] [TRACE] [YargsDefiner.js:61] {
  name: 'auth',
  description: 'Connect to token-based authentication services',
  type: 'group',
  children: [
    {
      name: 'login',
      description: 'Log in to an authentication service.',
      summary: 'Log in to an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'logout',
      description: 'Log out of an authentication service.',
      summary: 'Log out of an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:31.792] [TRACE] [main.js:18] This is a trace message after init!
[2023/06/29 15:34:31.794] [DEBUG] [main.js:19] This is a debug message after init!
[2023/06/29 15:34:31.795] [INFO] [main.js:20] This is an info message after init!
[2023/06/29 15:34:31.796] [WARN] [main.js:21] This is a warn message after init!
[2023/06/29 15:34:31.797] [ERROR] [main.js:22] This is an error message after init!
[2023/06/29 15:34:31.797] [FATAL] [main.js:23] This is a fatal message after init!
[2023/06/29 15:34:31.804] [DEBUG] [CommandYargs.js:76] Defining command: list
[2023/06/29 15:34:31.805] [DEBUG] [CommandYargs.js:175] Building positional string from: list
[2023/06/29 15:34:31.806] [DEBUG] [CommandYargs.js:181] Positional String:  [property]
[2023/06/29 15:34:31.807] [DEBUG] [CommandYargs.js:76] Defining command: secure
[2023/06/29 15:34:31.807] [DEBUG] [CommandYargs.js:175] Building positional string from: secure
[2023/06/29 15:34:31.808] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:31.809] [DEBUG] [CommandYargs.js:76] Defining command: set
[2023/06/29 15:34:31.811] [DEBUG] [CommandYargs.js:175] Building positional string from: set
[2023/06/29 15:34:31.812] [DEBUG] [CommandYargs.js:181] Positional String:  [property] [value]
[2023/06/29 15:34:31.813] [DEBUG] [CommandYargs.js:76] Defining command: init
[2023/06/29 15:34:31.814] [DEBUG] [CommandYargs.js:175] Building positional string from: init
[2023/06/29 15:34:31.815] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:31.815] [DEBUG] [CommandYargs.js:76] Defining command: schema
[2023/06/29 15:34:31.816] [DEBUG] [CommandYargs.js:175] Building positional string from: schema
[2023/06/29 15:34:31.817] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:31.817] [DEBUG] [CommandYargs.js:76] Defining command: profiles
[2023/06/29 15:34:31.818] [DEBUG] [CommandYargs.js:175] Building positional string from: profiles
[2023/06/29 15:34:31.819] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:31.820] [DEBUG] [CommandYargs.js:76] Defining command: edit
[2023/06/29 15:34:31.821] [DEBUG] [CommandYargs.js:175] Building positional string from: edit
[2023/06/29 15:34:31.822] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:31.823] [DEBUG] [CommandYargs.js:76] Defining command: import
[2023/06/29 15:34:31.824] [DEBUG] [CommandYargs.js:175] Building positional string from: import
[2023/06/29 15:34:31.825] [DEBUG] [CommandYargs.js:181] Positional String:  [location]
[2023/06/29 15:34:31.826] [DEBUG] [CommandYargs.js:76] Defining command: convert-profiles
[2023/06/29 15:34:31.826] [DEBUG] [CommandYargs.js:175] Building positional string from: convert-profiles
[2023/06/29 15:34:31.827] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:31.828] [DEBUG] [CommandYargs.js:76] Defining command: report-env
[2023/06/29 15:34:31.829] [DEBUG] [CommandYargs.js:175] Building positional string from: report-env
[2023/06/29 15:34:31.829] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:31.830] [DEBUG] [CommandYargs.js:76] Defining command: update-schemas
[2023/06/29 15:34:31.831] [DEBUG] [CommandYargs.js:175] Building positional string from: update-schemas
[2023/06/29 15:34:31.832] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:31.832] [DEBUG] [CommandYargs.js:76] Defining command: auto-init
[2023/06/29 15:34:31.833] [DEBUG] [CommandYargs.js:175] Building positional string from: auto-init
[2023/06/29 15:34:31.834] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:31.836] [DEBUG] [CommandYargs.js:95] Defining command builder for: set
[2023/06/29 15:34:31.840] [DEBUG] [CommandYargs.js:106] Handler invoked for: set
[2023/06/29 15:34:31.841] [DEBUG] [CommandYargs.js:119] Executing Handlers: set
[2023/06/29 15:34:31.842] [DEBUG] [CommandYargs.js:137] Executing Handlers (1 total)
[2023/06/29 15:34:31.863] [INFO] [CommandProcessor.js:271] Invoking command "set"...
[2023/06/29 15:34:31.879] [INFO] [CommandProcessor.js:272] Command issued:

imperative-test-cli config set profiles.secured.profiles.secure_profile.properties.info secret --secure


[2023/06/29 15:34:31.880] [TRACE] [CommandProcessor.js:273] Invoke parameters:
{
  arguments: {
    _: [ 'config', 'set' ],
    secure: true,
    version: undefined,
    V: undefined,
    'available-commands': undefined,
    ac: undefined,
    availableCommands: undefined,
    'response-format-json': undefined,
    rfj: undefined,
    responseFormatJson: undefined,
    help: undefined,
    h: undefined,
    'help-web': undefined,
    hw: undefined,
    helpWeb: undefined,
    'help-examples': undefined,
    helpExamples: undefined,
    'global-config': undefined,
    gc: undefined,
    globalConfig: undefined,
    'user-config': undefined,
    uc: undefined,
    userConfig: undefined,
    json: undefined,
    'show-inputs-only': undefined,
    showInputsOnly: undefined,
    '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
    property: 'profiles.secured.profiles.secure_profile.properties.info',
    value: 'secret'
  },
  silent: false,
  responseFormat: 'default'
}
[2023/06/29 15:34:31.881] [TRACE] [CommandProcessor.js:274] Command definition:
{
  name: 'set',
  type: 'command',
  handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler',
  summary: 'set configuration property',
  description: 'create or update a configuration property',
  positionals: [
    {
      name: 'property',
      description: 'The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)',
      required: true,
      type: 'string'
    },
    {
      name: 'value',
      description: "The property value to set. The value may be JSON. Use '--json' to indicate.",
      type: 'string'
    }
  ],
  options: [
    {
      name: 'global-config',
      description: 'Set the property in global config.',
      aliases: [ 'gc' ],
      type: 'boolean',
      defaultValue: false,
      group: 'Options'
    },
    {
      name: 'user-config',
      description: 'Set the property in user config.',
      aliases: [ 'uc' ],
      type: 'boolean',
      defaultValue: false,
      group: 'Options'
    },
    {
      name: 'json',
      description: 'The property value is JSON.',
      type: 'boolean',
      defaultValue: false,
      group: 'Options',
      aliases: []
    },
    {
      name: 'secure',
      description: 'Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.',
      type: 'boolean',
      group: 'Options',
      aliases: []
    },
    {
      name: 'show-inputs-only',
      group: 'Global Options',
      description: 'Show command inputs and do not run the command',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [ 'rfj' ],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [ 'h' ],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [ 'hw' ],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  examples: [
    {
      description: 'Set the property in global config',
      options: '"profiles.host1.profiles.service1.properties.setting" "value" --global-config'
    },
    {
      description: 'Set the property in user config',
      options: '"profiles.host1.profiles.service2.properties.setting" "value" --user-config'
    },
    {
      description: 'Set property value to JSON',
      options: '"profiles.host1.profiles.service3.properties.setting" "{"property":"value"}" --json'
    },
    {
      description: 'Store the property value',
      options: '"profiles.host1.profiles.service1.properties.setting" "value" --secure'
    },
    {
      description: 'Set a default zosmf profile',
      options: '"defaults.zosmf" "zosmfProfileName"'
    },
    {
      description: 'Set a default tso profile',
      options: '"defaults.tso" "tsoProfileName"'
    }
  ],
  aliases: [],
  passOn: [],
  children: []
}
[2023/06/29 15:34:31.881] [TRACE] [CommandProcessor.js:852] Constructing response object for "set" command...
[2023/06/29 15:34:31.882] [INFO] [CommandProcessor.js:307] Preparing (loading profiles, reading stdin, etc.) execution of "set" command...
[2023/06/29 15:34:31.883] [TRACE] [CommandProcessor.js:717] Base set of arguments from Yargs parse:
{
  _: [ 'config', 'set' ],
  secure: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  property: 'profiles.secured.profiles.secure_profile.properties.info',
  value: 'secret'
}
[2023/06/29 15:34:31.884] [TRACE] [CommandProcessor.js:720] Set of options and positionals defined on the command:
[
  {
    name: 'global-config',
    description: 'Set the property in global config.',
    aliases: [ 'gc' ],
    type: 'boolean',
    defaultValue: false,
    group: 'Options'
  },
  {
    name: 'user-config',
    description: 'Set the property in user config.',
    aliases: [ 'uc' ],
    type: 'boolean',
    defaultValue: false,
    group: 'Options'
  },
  {
    name: 'json',
    description: 'The property value is JSON.',
    type: 'boolean',
    defaultValue: false,
    group: 'Options',
    aliases: []
  },
  {
    name: 'secure',
    description: 'Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.',
    type: 'boolean',
    group: 'Options',
    aliases: []
  },
  {
    name: 'show-inputs-only',
    group: 'Global Options',
    description: 'Show command inputs and do not run the command',
    type: 'boolean',
    aliases: []
  },
  {
    name: 'response-format-json',
    aliases: [ 'rfj' ],
    group: 'Global Options',
    description: 'Produce JSON formatted data from a command',
    type: 'boolean'
  },
  {
    name: 'help',
    aliases: [ 'h' ],
    group: 'Global Options',
    description: 'Display help text',
    type: 'boolean'
  },
  {
    name: 'help-web',
    aliases: [ 'hw' ],
    group: 'Global Options',
    description: 'Display HTML help in browser',
    type: 'boolean'
  },
  {
    name: 'property',
    description: 'The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)',
    required: true,
    type: 'string'
  },
  {
    name: 'value',
    description: "The property value to set. The value may be JSON. Use '--json' to indicate.",
    type: 'string'
  }
]
[2023/06/29 15:34:31.885] [TRACE] [CommandProcessor.js:725] Arguments extracted from :
{
  _: [ 'config', 'set' ],
  secure: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  property: 'profiles.secured.profiles.secure_profile.properties.info',
  value: 'secret'
}
[2023/06/29 15:34:31.885] [TRACE] [CommandProcessor.js:727] Arguments merged :
{
  _: [ 'config', 'set' ],
  secure: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  property: 'profiles.secured.profiles.secure_profile.properties.info',
  value: 'secret'
}
[2023/06/29 15:34:31.886] [TRACE] [CommandProcessor.js:729] Reading stdin for "set" command...
[2023/06/29 15:34:31.887] [DEBUG] [SharedOptions.js:61] Standard input reading not requested. Skipping stdin read
[2023/06/29 15:34:31.907] [TRACE] [CommandProcessor.js:788] Arguments extracted from the config:
{}
[2023/06/29 15:34:31.907] [TRACE] [CommandProcessor.js:791] Loading profiles for "set" command. Profile definitions: undefined
[2023/06/29 15:34:31.908] [TRACE] [CommandProfileLoader.js:53] Profile loader created for command: set
[2023/06/29 15:34:31.909] [INFO] [CommandProfileLoader.js:83] Request to load profiles for command: set...
[2023/06/29 15:34:31.910] [TRACE] [CommandProfileLoader.js:84] Profile load arguments supplied:
{
  _: [ 'config', 'set' ],
  secure: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  property: 'profiles.secured.profiles.secure_profile.properties.info',
  value: 'secret'
}
[2023/06/29 15:34:31.911] [TRACE] [CommandProcessor.js:797] Profiles loaded for "set" command:
CommandProfiles { mMetaMap: Map(0) {}, mMap: Map(0) {} }
[2023/06/29 15:34:31.911] [TRACE] [CommandProcessor.js:828] Full argument object constructed:
{
  _: [ 'config', 'set' ],
  secure: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  property: 'profiles.secured.profiles.secure_profile.properties.info',
  value: 'secret',
  globalConfig: false,
  'global-config': false,
  gc: false,
  userConfig: false,
  'user-config': false,
  uc: false,
  json: false
}
[2023/06/29 15:34:31.912] [TRACE] [CommandProcessor.js:852] Constructing response object for "set" command...
[2023/06/29 15:34:31.913] [INFO] [CommandProcessor.js:211] Performing syntax validation for command "set"...
[2023/06/29 15:34:31.928] [TRACE] [SyntaxValidator.js:115] no unknown positionals. Length of positional arguments was: %s. Contents of _ were %s, Expected "_" to have length of %s
[2023/06/29 15:34:31.937] [INFO] [CommandProcessor.js:467] Invoking process method of handler for "set" command.
[2023/06/29 15:34:31.938] [INFO] [CommandProcessor.js:879] Requiring handler "C:\ourstuff\repos\dev\imperative\lib\imperative\src\config\cmd\set\set.handler" for command "C:\ourstuff\repos\dev\imperative\lib\imperative\src\config\cmd\set\set.handler"...
[2023/06/29 15:34:31.942] [INFO] [CommandProcessor.js:882] Handler "C:\ourstuff\repos\dev\imperative\lib\imperative\src\config\cmd\set\set.handler" for command "set" successfully loaded/required.
[2023/06/29 15:34:31.954] [INFO] [CommandProcessor.js:498] Handler for command "set" succeeded.
[2023/06/29 15:34:31.955] [INFO] [CommandProcessor.js:933] Command "set" completed with success flag: "true"
[2023/06/29 15:34:31.956] [TRACE] [CommandProcessor.js:934] Command "set" finished. Response object:
{
  success: true,
  exitCode: 0,
  message: '',
  stdout: <Buffer >,
  stderr: <Buffer >,
  data: {},
  error: undefined
}
[2023/06/29 15:34:36.345] [TRACE] [AppSettings.js:49] Attempting to load settings file: C:\ourstuff\repos\dev\imperative\__tests__\__results__\data\c27c44e1-a429-4801-85da-a23cd02128a5_imperative_test_cli_test_masking_command\settings\imperative.json
[2023/06/29 15:34:36.346] [TRACE] [AppSettings.js:66] Settings were loaded
[2023/06/29 15:34:36.347] [TRACE] [AppSettings.js:67] Loaded Settings:
[2023/06/29 15:34:36.347] [TRACE] [AppSettings.js:68] { overrides: { CredentialManager: 'imperative-test-cli' } }
[2023/06/29 15:34:36.348] [DEBUG] [ConfigManagementFacility.js:61] ConfigManagementFacility.init() - Start
[2023/06/29 15:34:36.348] [DEBUG] [UpdateImpConfig.js:38] Adding definition = 'config'
[2023/06/29 15:34:36.348] [DEBUG] [ConfigManagementFacility.js:82] ConfigManagementFacility.init() - Success
[2023/06/29 15:34:36.349] [INFO] [Imperative.js:450] Set imperative log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_IMPERATIVE_LOG_LEVEL'
[2023/06/29 15:34:36.349] [INFO] [Imperative.js:468] Set app log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_APP_LOG_LEVEL'
[2023/06/29 15:34:36.351] [DEBUG] [DefaultCredentialManager.js:106] Loading Keytar module from C:\ourstuff\repos\dev\imperative\node_modules\keytar\lib\keytar.js
[2023/06/29 15:34:36.354] [DEBUG] [CredentialManagerFactory.js:136] Initialized the "Imperative Package Test CLI" credential manager for "imperative-test-cli".
[2023/06/29 15:34:36.369] [INFO] [DefaultCredentialManager.js:171] Successfully loaded secure value for service = 'imperative-test-cli' account = 'secure_config_props'
[2023/06/29 15:34:36.371] [INFO] [Imperative.js:247] Loaded and validated config for 'imperative-test-cli'. Config details at trace level of logging.
[2023/06/29 15:34:36.372] [TRACE] [Imperative.js:248] The config object for 'imperative-test-cli' is:
{
  "commandModuleGlobs": [
    "**/cli/*/*definition!(.d).*s"
  ],
  "rootCommandDescription": "A test CLI for the 'imperative' imperative package",
  "defaultHome": "C:\\Users\\ej608771/.imperative-test-cli",
  "productDisplayName": "Imperative Package Test CLI",
  "name": "imperative-test-cli",
  "envVariablePrefix": "IMPERATIVE_TEST_CLI",
  "allowPlugins": false,
  "configAutoInitCommandConfig": {
    "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
    "provider": "Fruit Manager",
    "autoInit": {
      "options": [
        {
          "name": "host",
          "description": "Fruit host",
          "type": "string"
        },
        {
          "name": "port",
          "description": "Fruit port",
          "type": "number"
        },
        {
          "name": "user",
          "description": "Fruit username",
          "type": "string"
        },
        {
          "name": "password",
          "description": "Fruit password",
          "type": "string"
        },
        {
          "name": "token-type",
          "description": "Fruit token type",
          "type": "string"
        },
        {
          "name": "token-value",
          "description": "Fruit token value",
          "type": "string"
        }
      ]
    },
    "profileType": "base"
  },
  "profiles": [
    {
      "type": "secured",
      "schema": {
        "type": "object",
        "title": "Test Secured Fields",
        "description": "Test Secured Fields",
        "properties": {
          "info": {
            "type": "string",
            "includeInTemplate": true,
            "optionDefinition": {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "required": true
            }
          },
          "secret": {
            "type": "string",
            "secure": true,
            "optionDefinition": {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "required": true
            }
          }
        }
      }
    }
  ],
  "baseProfile": {
    "type": "base",
    "schema": {
      "type": "object",
      "title": "Secure Profile",
      "description": "Secure Profile",
      "properties": {
        "info": {
          "type": "string",
          "optionDefinition": {
            "name": "info",
            "description": "The info the keep in the profile.",
            "type": "string"
          }
        },
        "secret": {
          "type": "string",
          "secure": true,
          "includeInTemplate": true,
          "optionDefinition": {
            "name": "secret",
            "description": "The secret info the keep in the profile.",
            "type": "string"
          }
        },
        "host": {
          "type": "string",
          "optionDefinition": {
            "name": "host",
            "description": "Fruit host",
            "type": "string"
          }
        },
        "port": {
          "type": "number",
          "optionDefinition": {
            "name": "port",
            "description": "Fruit port",
            "type": "number"
          }
        },
        "user": {
          "type": "string",
          "optionDefinition": {
            "name": "user",
            "description": "Fruit username",
            "type": "string"
          },
          "secure": true
        },
        "password": {
          "type": "string",
          "optionDefinition": {
            "name": "password",
            "description": "Fruit password",
            "type": "string"
          },
          "secure": true
        },
        "tokenType": {
          "type": "string",
          "optionDefinition": {
            "name": "token-type",
            "description": "Fruit token type",
            "type": "string"
          }
        },
        "tokenValue": {
          "type": "string",
          "optionDefinition": {
            "name": "token-value",
            "description": "Fruit token value",
            "type": "string"
          },
          "secure": true
        }
      }
    },
    "authConfig": [
      {
        "serviceName": "fruit",
        "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
        "login": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string"
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string"
            }
          ]
        },
        "logout": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string"
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string"
            }
          ]
        }
      }
    ]
  },
  "definitions": [
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean"
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ]
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ]
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ]
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ]
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ]
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ]
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ]
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ]
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ]
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ]
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ]
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ]
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ]
        }
      ]
    }
  ],
  "overrides": {},
  "primaryTextColor": "yellow",
  "secondaryTextColor": "blue",
  "allowConfigGroup": true,
  "logging": {
    "imperativeLogging": {
      "apiName": "imperative",
      "category": "imperative"
    },
    "appLogging": {
      "apiName": "app",
      "category": "app"
    }
  }
}
[2023/06/29 15:34:36.374] [DEBUG] [DefinitionTreeResolver.js:89] Combining command definitions from caller directory C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib, 1 command definitions and 1 globs
[2023/06/29 15:34:36.385] [TRACE] [DefinitionTreeResolver.js:102] Matches for glob '**/cli/*/*definition!(.d).*s' from caller directory 'C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib':
cli/test/Test.definition.js 
[2023/06/29 15:34:36.385] [TRACE] [DefinitionTreeResolver.js:105] Attempting load of glob match cli/test/Test.definition.js
[2023/06/29 15:34:36.391] [TRACE] [DefinitionTreeResolver.js:107] Successfully loaded cli/test/Test.definition.js
[2023/06/29 15:34:36.405] [INFO] [Imperative.js:268] Inherited traits applied to CLI command tree children. Cmd tree details at trace level of logging.
[2023/06/29 15:34:36.406] [TRACE] [Imperative.js:270] The CLI command tree before being defined to yargs: {
  "name": "",
  "description": "A test CLI for the 'imperative' imperative package",
  "children": [
    {
      "name": "test",
      "description": "Test that various imperative features are working",
      "summary": "Test imperative features",
      "type": "group",
      "children": [
        {
          "name": "logging",
          "description": "Test that logging is working correctly.",
          "summary": "Test imperative logging",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler",
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-auto-store",
          "description": "Read some config",
          "summary": "Read some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-override",
          "description": "Override some config",
          "summary": "Override some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "someKey",
              "description": "Some key that should override password in prompting.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "masking",
          "description": "Test that masking is working correctly.",
          "summary": "Test imperative masking",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler",
          "positionals": [
            {
              "name": "test-argument",
              "description": "test argument",
              "type": "string",
              "required": true
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ],
              "group": "Options"
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ],
              "group": "Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "auto-init",
          "type": "command",
          "summary": "Automatically generate a config from Fruit Manager",
          "description": "Automatically generate a config from Fruit Manager",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
          "options": [
            {
              "name": "user-config",
              "aliases": [
                "uc"
              ],
              "description": "Save config in the user layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "global-config",
              "aliases": [
                "gc"
              ],
              "description": "Save config in the global layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "dry-run",
              "aliases": [
                "dr",
                "dry"
              ],
              "description": "Display the outcome of the initialization without saving",
              "type": "boolean",
              "conflictsWith": [
                "edit"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "overwrite",
              "aliases": [
                "ow"
              ],
              "description": "Replaces an existing configuration with a new configuration",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options",
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "f"
              ],
              "description": "Confirms the overwrite option",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            }
          ],
          "customize": {},
          "profile": {
            "optional": [
              "base"
            ]
          },
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "profiles",
      "description": "Create and manage configuration profiles.",
      "type": "group",
      "deprecatedReplacement": "The 'config init' command",
      "children": [
        {
          "name": "create",
          "description": "Create new configuration profiles.",
          "summary": "Create new configuration profiles",
          "aliases": [
            "cre"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config init' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Create a secured profile",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the secured profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Create a base profile",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the base profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "update",
          "description": "Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
          "summary": "Update existing profiles",
          "aliases": [
            "upd"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Update a secured profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Update a base profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "delete",
          "description": "Delete existing profiles.",
          "summary": "Delete existing profiles",
          "aliases": [
            "rm"
          ],
          "type": "group",
          "deprecatedReplacement": "Edit your Zowe V2 configuration imperative-test-cli.config.json",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Delete a secured profile.",
              "description": "Delete a secured profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the secured  profile to be deleted. You can also load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a secured profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Delete a base profile.",
              "description": "Delete a base profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the base  profile to be deleted. You can also load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a base profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "list",
          "description": "List profiles of the type {{type}}.",
          "summary": "List existing profiles",
          "aliases": [
            "ls"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config list' command",
          "children": [
            {
              "name": "secured-profiles",
              "aliases": [
                "secured"
              ],
              "summary": "List profiles of the type secured.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List secured  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type secured"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type secured and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profiles",
              "aliases": [
                "base"
              ],
              "summary": "List profiles of the type base.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List base  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type base"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type base and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "set-default",
          "summary": "Set which profiles are loaded by default",
          "description": "Set which profiles are loaded by default.",
          "type": "group",
          "aliases": [
            "set"
          ],
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Set the default\n profiles for the secured group",
              "description": "The secured set default-profiles command allows you to set the default profiles for this command group. When a secured command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the secured group. When you issue commands within the secured group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type secured to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Set the default\n profiles for the base group",
              "description": "The base set default-profiles command allows you to set the default profiles for this command group. When a base command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the base group. When you issue commands within the base group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type base to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "auth",
      "description": "Connect to token-based authentication services",
      "type": "group",
      "children": [
        {
          "name": "login",
          "description": "Log in to an authentication service.",
          "summary": "Log in to an authentication service",
          "aliases": [
            "li"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log in to fruit authentication service",
              "description": "Log in to fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "show-token",
                  "aliases": [
                    "st"
                  ],
                  "description": "Show the token when login is successful. If specified, does not save the token to a profile.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "logout",
          "description": "Log out of an authentication service.",
          "summary": "Log out of an authentication service",
          "aliases": [
            "lo"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log out of fruit authentication service",
              "description": "Log out of fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    }
  ],
  "type": "group",
  "options": [
    {
      "name": "version",
      "aliases": [
        "V"
      ],
      "description": "Display the current version of Imperative Package Test CLI",
      "type": "boolean",
      "conflictsWith": [
        "available-commands"
      ],
      "group": "Options"
    },
    {
      "name": "available-commands",
      "aliases": [
        "ac"
      ],
      "description": "Displays a list of available commands",
      "type": "boolean",
      "conflictsWith": [
        "version"
      ],
      "group": "Options"
    },
    {
      "name": "response-format-json",
      "aliases": [
        "rfj"
      ],
      "group": "Global Options",
      "description": "Produce JSON formatted data from a command",
      "type": "boolean"
    },
    {
      "name": "help",
      "aliases": [
        "h"
      ],
      "group": "Global Options",
      "description": "Display help text",
      "type": "boolean"
    },
    {
      "name": "help-web",
      "aliases": [
        "hw"
      ],
      "group": "Global Options",
      "description": "Display HTML help in browser",
      "type": "boolean"
    }
  ],
  "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src/handlers/DefaultRootCommandHandler",
  "isRoot": true,
  "aliases": [],
  "positionals": [],
  "passOn": [
    {
      "property": "options",
      "value": {
        "name": "help-examples",
        "group": "Global Options",
        "description": "Display examples for all the commands in a group",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "command"
        }
      ],
      "merge": true
    },
    {
      "property": "options",
      "value": {
        "name": "show-inputs-only",
        "group": "Global Options",
        "description": "Show command inputs and do not run the command",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "group"
        }
      ],
      "merge": true
    }
  ]
}
[2023/06/29 15:34:36.409] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:36.410] [TRACE] [YargsDefiner.js:61] {
  name: 'test',
  description: 'Test that various imperative features are working',
  summary: 'Test imperative features',
  type: 'group',
  children: [
    {
      name: 'logging',
      description: 'Test that logging is working correctly.',
      summary: 'Test imperative logging',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler',
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-auto-store',
      description: 'Read some config',
      summary: 'Read some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-override',
      description: 'Override some config',
      summary: 'Override some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'masking',
      description: 'Test that masking is working correctly.',
      summary: 'Test imperative masking',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler',
      positionals: [Array],
      options: [Array],
      aliases: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:36.411] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:36.414] [TRACE] [YargsDefiner.js:61] {
  name: 'config',
  type: 'group',
  summary: 'Manage JSON project and global configuration',
  description: 'Manage JSON project and global configuration',
  children: [
    {
      name: 'list',
      aliases: [Array],
      type: 'command',
      summary: 'list config properties',
      description: 'List config properties',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'secure',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler',
      summary: 'secure configuration properties',
      description: 'prompt for secure configuration properties',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'set',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler',
      summary: 'set configuration property',
      description: 'create or update a configuration property',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'init',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler',
      summary: 'init config files',
      description: 'Initialize config files. Defaults to initializing "imperative-test-cli.config.json" in the current working directory unless otherwise specified.\n' +
        '\n' +
        'Use "--user-config" to init "imperative-test-cli.config.user.json". Use "--global-config" to initialize the configuration files in your home "~/.zowe" directory.\n' +
        '\n' +
        'Use "--no-prompt" to skip prompting for values in a CI environment.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'schema',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler',
      summary: 'dumps the JSON schema for the config',
      description: "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'profiles',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler',
      summary: 'displays profile paths',
      description: 'Displays profile paths.',
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'edit',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler',
      summary: 'edit config files',
      description: "Edit an existing config file in your system's default text editor.\n" +
        '\n' +
        'In a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'import',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler',
      summary: 'import config files',
      description: 'Import config files from another location on disk or from an Internet URL.\n' +
        '\n' +
        'If the config `$schema` property points to a relative path, the schema will also be imported.',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'convert-profiles',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler',
      summary: 'Convert profiles to team config',
      description: 'Convert v1 profiles to a global imperative-test-cli.config.json file.',
      options: [Array],
      examples: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'report-env',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler',
      summary: 'Report the state of your working environment',
      description: 'Reports key items from your environment and identifies problem conditions',
      examples: [Array],
      options: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'update-schemas',
      aliases: [Array],
      type: 'command',
      summary: 'update schema files',
      description: 'Update schema files by looking up the directory structure.\n' +
        '\n' +
        'Schema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler',
      positionals: [],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'auto-init',
      type: 'command',
      summary: 'Automatically generate a config from Fruit Manager',
      description: 'Automatically generate a config from Fruit Manager',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler',
      options: [Array],
      customize: {},
      profile: [Object],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:36.415] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:36.415] [TRACE] [YargsDefiner.js:61] {
  name: 'profiles',
  description: 'Create and manage configuration profiles.',
  type: 'group',
  deprecatedReplacement: "The 'config init' command",
  children: [
    {
      name: 'create',
      description: 'Create new configuration profiles.',
      summary: 'Create new configuration profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config init' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'update',
      description: 'Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.',
      summary: 'Update existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'delete',
      description: 'Delete existing profiles.',
      summary: 'Delete existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: 'Edit your Zowe V2 configuration imperative-test-cli.config.json',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'list',
      description: 'List profiles of the type {{type}}.',
      summary: 'List existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config list' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'set-default',
      summary: 'Set which profiles are loaded by default',
      description: 'Set which profiles are loaded by default.',
      type: 'group',
      aliases: [Array],
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:36.417] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:36.417] [TRACE] [YargsDefiner.js:61] {
  name: 'auth',
  description: 'Connect to token-based authentication services',
  type: 'group',
  children: [
    {
      name: 'login',
      description: 'Log in to an authentication service.',
      summary: 'Log in to an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'logout',
      description: 'Log out of an authentication service.',
      summary: 'Log out of an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:36.418] [TRACE] [main.js:18] This is a trace message after init!
[2023/06/29 15:34:36.419] [DEBUG] [main.js:19] This is a debug message after init!
[2023/06/29 15:34:36.420] [INFO] [main.js:20] This is an info message after init!
[2023/06/29 15:34:36.421] [WARN] [main.js:21] This is a warn message after init!
[2023/06/29 15:34:36.422] [ERROR] [main.js:22] This is an error message after init!
[2023/06/29 15:34:36.423] [FATAL] [main.js:23] This is a fatal message after init!
[2023/06/29 15:34:36.430] [DEBUG] [CommandYargs.js:76] Defining command: logging
[2023/06/29 15:34:36.431] [DEBUG] [CommandYargs.js:175] Building positional string from: logging
[2023/06/29 15:34:36.432] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:36.433] [DEBUG] [CommandYargs.js:76] Defining command: test-config-auto-store
[2023/06/29 15:34:36.434] [DEBUG] [CommandYargs.js:175] Building positional string from: test-config-auto-store
[2023/06/29 15:34:36.434] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:36.435] [DEBUG] [CommandYargs.js:76] Defining command: test-config-override
[2023/06/29 15:34:36.436] [DEBUG] [CommandYargs.js:175] Building positional string from: test-config-override
[2023/06/29 15:34:36.437] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:36.438] [DEBUG] [CommandYargs.js:76] Defining command: masking
[2023/06/29 15:34:36.438] [DEBUG] [CommandYargs.js:175] Building positional string from: masking
[2023/06/29 15:34:36.439] [DEBUG] [CommandYargs.js:181] Positional String:  [test-argument]
[2023/06/29 15:34:36.441] [DEBUG] [CommandYargs.js:95] Defining command builder for: masking
[2023/06/29 15:34:36.446] [DEBUG] [CommandYargs.js:106] Handler invoked for: masking
[2023/06/29 15:34:36.447] [DEBUG] [CommandYargs.js:119] Executing Handlers: masking
[2023/06/29 15:34:36.448] [DEBUG] [CommandYargs.js:137] Executing Handlers (1 total)
[2023/06/29 15:34:36.467] [INFO] [CommandProcessor.js:271] Invoking command "masking"...
[2023/06/29 15:34:36.483] [INFO] [CommandProcessor.js:272] Command issued:

imperative-test-cli test masking ****


[2023/06/29 15:34:36.484] [TRACE] [CommandProcessor.js:273] Invoke parameters:
{
  arguments: {
    _: [ 'test', 'masking' ],
    version: undefined,
    V: undefined,
    'available-commands': undefined,
    ac: undefined,
    availableCommands: undefined,
    'response-format-json': undefined,
    rfj: undefined,
    responseFormatJson: undefined,
    help: undefined,
    h: undefined,
    'help-web': undefined,
    hw: undefined,
    helpWeb: undefined,
    'help-examples': undefined,
    helpExamples: undefined,
    'show-inputs-only': undefined,
    showInputsOnly: undefined,
    '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
    'test-argument': 'secret',
    testArgument: 'secret'
  },
  silent: false,
  responseFormat: 'default'
}
[2023/06/29 15:34:36.484] [TRACE] [CommandProcessor.js:274] Command definition:
{
  name: 'masking',
  description: 'Test that masking is working correctly.',
  summary: 'Test imperative masking',
  type: 'command',
  handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler',
  positionals: [
    {
      name: 'test-argument',
      description: 'test argument',
      type: 'string',
      required: true
    }
  ],
  options: [
    {
      name: 'show-inputs-only',
      group: 'Global Options',
      description: 'Show command inputs and do not run the command',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [ 'rfj' ],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [ 'h' ],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [ 'hw' ],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  passOn: [],
  children: []
}
[2023/06/29 15:34:36.485] [TRACE] [CommandProcessor.js:852] Constructing response object for "masking" command...
[2023/06/29 15:34:36.486] [INFO] [CommandProcessor.js:307] Preparing (loading profiles, reading stdin, etc.) execution of "masking" command...
[2023/06/29 15:34:36.487] [TRACE] [CommandProcessor.js:717] Base set of arguments from Yargs parse:
{
  _: [ 'test', 'masking' ],
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:36.487] [TRACE] [CommandProcessor.js:720] Set of options and positionals defined on the command:
[
  {
    name: 'show-inputs-only',
    group: 'Global Options',
    description: 'Show command inputs and do not run the command',
    type: 'boolean',
    aliases: []
  },
  {
    name: 'response-format-json',
    aliases: [ 'rfj' ],
    group: 'Global Options',
    description: 'Produce JSON formatted data from a command',
    type: 'boolean'
  },
  {
    name: 'help',
    aliases: [ 'h' ],
    group: 'Global Options',
    description: 'Display help text',
    type: 'boolean'
  },
  {
    name: 'help-web',
    aliases: [ 'hw' ],
    group: 'Global Options',
    description: 'Display HTML help in browser',
    type: 'boolean'
  },
  {
    name: 'test-argument',
    description: 'test argument',
    type: 'string',
    required: true
  }
]
[2023/06/29 15:34:36.488] [TRACE] [CommandProcessor.js:725] Arguments extracted from :
{
  _: [ 'test', 'masking' ],
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:36.489] [TRACE] [CommandProcessor.js:727] Arguments merged :
{
  _: [ 'test', 'masking' ],
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:36.489] [TRACE] [CommandProcessor.js:729] Reading stdin for "masking" command...
[2023/06/29 15:34:36.490] [DEBUG] [SharedOptions.js:61] Standard input reading not requested. Skipping stdin read
[2023/06/29 15:34:36.508] [TRACE] [CommandProcessor.js:788] Arguments extracted from the config:
{}
[2023/06/29 15:34:36.509] [TRACE] [CommandProcessor.js:791] Loading profiles for "masking" command. Profile definitions: undefined
[2023/06/29 15:34:36.509] [TRACE] [CommandProfileLoader.js:53] Profile loader created for command: masking
[2023/06/29 15:34:36.510] [INFO] [CommandProfileLoader.js:83] Request to load profiles for command: masking...
[2023/06/29 15:34:36.510] [TRACE] [CommandProfileLoader.js:84] Profile load arguments supplied:
{
  _: [ 'test', 'masking' ],
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:36.512] [TRACE] [CommandProcessor.js:797] Profiles loaded for "masking" command:
CommandProfiles { mMetaMap: Map(0) {}, mMap: Map(0) {} }
[2023/06/29 15:34:36.512] [TRACE] [CommandProcessor.js:828] Full argument object constructed:
{
  _: [ 'test', 'masking' ],
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:36.512] [TRACE] [CommandProcessor.js:852] Constructing response object for "masking" command...
[2023/06/29 15:34:36.513] [INFO] [CommandProcessor.js:211] Performing syntax validation for command "masking"...
[2023/06/29 15:34:36.528] [TRACE] [SyntaxValidator.js:115] no unknown positionals. Length of positional arguments was: %s. Contents of _ were %s, Expected "_" to have length of %s
[2023/06/29 15:34:36.529] [INFO] [CommandProcessor.js:467] Invoking process method of handler for "masking" command.
[2023/06/29 15:34:36.530] [INFO] [CommandProcessor.js:879] Requiring handler "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler" for command "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler"...
[2023/06/29 15:34:36.532] [INFO] [CommandProcessor.js:882] Handler "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler" for command "masking" successfully loaded/required.
[2023/06/29 15:34:36.540] [TRACE] [Masking.handler.js:38] Test-Masking: imperative logger: trace message: secret
[2023/06/29 15:34:36.541] [DEBUG] [Masking.handler.js:39] Test-Masking: imperative logger: debug message: ****
[2023/06/29 15:34:36.542] [INFO] [Masking.handler.js:40] Test-Masking: imperative logger: info message: ****
[2023/06/29 15:34:36.543] [WARN] [Masking.handler.js:41] Test-Masking: imperative logger: warn message: ****
[2023/06/29 15:34:36.543] [ERROR] [Masking.handler.js:42] Test-Masking: imperative logger: error message: ****
[2023/06/29 15:34:36.544] [FATAL] [Masking.handler.js:43] Test-Masking: imperative logger: fatal message: ****
[2023/06/29 15:34:36.552] [INFO] [CommandProcessor.js:498] Handler for command "masking" succeeded.
[2023/06/29 15:34:36.553] [INFO] [CommandProcessor.js:933] Command "masking" completed with success flag: "true"
[2023/06/29 15:34:36.554] [TRACE] [CommandProcessor.js:934] Command "masking" finished. Response object:
{
  success: true,
  exitCode: 0,
  message: '',
  stdout: <Buffer 54 65 73 74 2d 4d 61 73 6b 69 6e 67 3a 20 63 6f 6e 73 6f 6c 65 20 6c 6f 67 67 65 72 3a 20 6c 6f 67 20 6d 65 73 73 61 67 65 3a 20 73 65 63 72 65 74 0a>,
  stderr: <Buffer 54 65 73 74 2d 4d 61 73 6b 69 6e 67 3a 20 63 6f 6e 73 6f 6c 65 20 6c 6f 67 67 65 72 3a 20 65 72 72 6f 72 20 6d 65 73 73 61 67 65 3a 20 73 65 63 72 65 ... 61 more bytes>,
  data: {},
  error: undefined
}
[2023/06/29 15:34:40.991] [TRACE] [AppSettings.js:49] Attempting to load settings file: C:\ourstuff\repos\dev\imperative\__tests__\__results__\data\c27c44e1-a429-4801-85da-a23cd02128a5_imperative_test_cli_test_masking_command\settings\imperative.json
[2023/06/29 15:34:40.992] [TRACE] [AppSettings.js:66] Settings were loaded
[2023/06/29 15:34:40.993] [TRACE] [AppSettings.js:67] Loaded Settings:
[2023/06/29 15:34:40.993] [TRACE] [AppSettings.js:68] { overrides: { CredentialManager: 'imperative-test-cli' } }
[2023/06/29 15:34:40.993] [DEBUG] [ConfigManagementFacility.js:61] ConfigManagementFacility.init() - Start
[2023/06/29 15:34:40.994] [DEBUG] [UpdateImpConfig.js:38] Adding definition = 'config'
[2023/06/29 15:34:40.994] [DEBUG] [ConfigManagementFacility.js:82] ConfigManagementFacility.init() - Success
[2023/06/29 15:34:40.994] [INFO] [Imperative.js:450] Set imperative log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_IMPERATIVE_LOG_LEVEL'
[2023/06/29 15:34:40.995] [INFO] [Imperative.js:468] Set app log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_APP_LOG_LEVEL'
[2023/06/29 15:34:40.997] [DEBUG] [DefaultCredentialManager.js:106] Loading Keytar module from C:\ourstuff\repos\dev\imperative\node_modules\keytar\lib\keytar.js
[2023/06/29 15:34:41.000] [DEBUG] [CredentialManagerFactory.js:136] Initialized the "Imperative Package Test CLI" credential manager for "imperative-test-cli".
[2023/06/29 15:34:41.004] [INFO] [DefaultCredentialManager.js:171] Successfully loaded secure value for service = 'imperative-test-cli' account = 'secure_config_props'
[2023/06/29 15:34:41.006] [INFO] [Imperative.js:247] Loaded and validated config for 'imperative-test-cli'. Config details at trace level of logging.
[2023/06/29 15:34:41.007] [TRACE] [Imperative.js:248] The config object for 'imperative-test-cli' is:
{
  "commandModuleGlobs": [
    "**/cli/*/*definition!(.d).*s"
  ],
  "rootCommandDescription": "A test CLI for the 'imperative' imperative package",
  "defaultHome": "C:\\Users\\ej608771/.imperative-test-cli",
  "productDisplayName": "Imperative Package Test CLI",
  "name": "imperative-test-cli",
  "envVariablePrefix": "IMPERATIVE_TEST_CLI",
  "allowPlugins": false,
  "configAutoInitCommandConfig": {
    "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
    "provider": "Fruit Manager",
    "autoInit": {
      "options": [
        {
          "name": "host",
          "description": "Fruit host",
          "type": "string"
        },
        {
          "name": "port",
          "description": "Fruit port",
          "type": "number"
        },
        {
          "name": "user",
          "description": "Fruit username",
          "type": "string"
        },
        {
          "name": "password",
          "description": "Fruit password",
          "type": "string"
        },
        {
          "name": "token-type",
          "description": "Fruit token type",
          "type": "string"
        },
        {
          "name": "token-value",
          "description": "Fruit token value",
          "type": "string"
        }
      ]
    },
    "profileType": "base"
  },
  "profiles": [
    {
      "type": "secured",
      "schema": {
        "type": "object",
        "title": "Test Secured Fields",
        "description": "Test Secured Fields",
        "properties": {
          "info": {
            "type": "string",
            "includeInTemplate": true,
            "optionDefinition": {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "required": true
            }
          },
          "secret": {
            "type": "string",
            "secure": true,
            "optionDefinition": {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "required": true
            }
          }
        }
      }
    }
  ],
  "baseProfile": {
    "type": "base",
    "schema": {
      "type": "object",
      "title": "Secure Profile",
      "description": "Secure Profile",
      "properties": {
        "info": {
          "type": "string",
          "optionDefinition": {
            "name": "info",
            "description": "The info the keep in the profile.",
            "type": "string"
          }
        },
        "secret": {
          "type": "string",
          "secure": true,
          "includeInTemplate": true,
          "optionDefinition": {
            "name": "secret",
            "description": "The secret info the keep in the profile.",
            "type": "string"
          }
        },
        "host": {
          "type": "string",
          "optionDefinition": {
            "name": "host",
            "description": "Fruit host",
            "type": "string"
          }
        },
        "port": {
          "type": "number",
          "optionDefinition": {
            "name": "port",
            "description": "Fruit port",
            "type": "number"
          }
        },
        "user": {
          "type": "string",
          "optionDefinition": {
            "name": "user",
            "description": "Fruit username",
            "type": "string"
          },
          "secure": true
        },
        "password": {
          "type": "string",
          "optionDefinition": {
            "name": "password",
            "description": "Fruit password",
            "type": "string"
          },
          "secure": true
        },
        "tokenType": {
          "type": "string",
          "optionDefinition": {
            "name": "token-type",
            "description": "Fruit token type",
            "type": "string"
          }
        },
        "tokenValue": {
          "type": "string",
          "optionDefinition": {
            "name": "token-value",
            "description": "Fruit token value",
            "type": "string"
          },
          "secure": true
        }
      }
    },
    "authConfig": [
      {
        "serviceName": "fruit",
        "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
        "login": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string"
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string"
            }
          ]
        },
        "logout": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string"
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string"
            }
          ]
        }
      }
    ]
  },
  "definitions": [
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean"
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ]
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ]
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ]
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ]
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ]
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ]
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ]
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ]
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ]
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ]
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ]
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ]
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ]
        }
      ]
    }
  ],
  "overrides": {},
  "primaryTextColor": "yellow",
  "secondaryTextColor": "blue",
  "allowConfigGroup": true,
  "logging": {
    "imperativeLogging": {
      "apiName": "imperative",
      "category": "imperative"
    },
    "appLogging": {
      "apiName": "app",
      "category": "app"
    }
  }
}
[2023/06/29 15:34:41.008] [DEBUG] [DefinitionTreeResolver.js:89] Combining command definitions from caller directory C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib, 1 command definitions and 1 globs
[2023/06/29 15:34:41.019] [TRACE] [DefinitionTreeResolver.js:102] Matches for glob '**/cli/*/*definition!(.d).*s' from caller directory 'C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib':
cli/test/Test.definition.js 
[2023/06/29 15:34:41.019] [TRACE] [DefinitionTreeResolver.js:105] Attempting load of glob match cli/test/Test.definition.js
[2023/06/29 15:34:41.026] [TRACE] [DefinitionTreeResolver.js:107] Successfully loaded cli/test/Test.definition.js
[2023/06/29 15:34:41.039] [INFO] [Imperative.js:268] Inherited traits applied to CLI command tree children. Cmd tree details at trace level of logging.
[2023/06/29 15:34:41.039] [TRACE] [Imperative.js:270] The CLI command tree before being defined to yargs: {
  "name": "",
  "description": "A test CLI for the 'imperative' imperative package",
  "children": [
    {
      "name": "test",
      "description": "Test that various imperative features are working",
      "summary": "Test imperative features",
      "type": "group",
      "children": [
        {
          "name": "logging",
          "description": "Test that logging is working correctly.",
          "summary": "Test imperative logging",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler",
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-auto-store",
          "description": "Read some config",
          "summary": "Read some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-override",
          "description": "Override some config",
          "summary": "Override some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "someKey",
              "description": "Some key that should override password in prompting.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "masking",
          "description": "Test that masking is working correctly.",
          "summary": "Test imperative masking",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler",
          "positionals": [
            {
              "name": "test-argument",
              "description": "test argument",
              "type": "string",
              "required": true
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ],
              "group": "Options"
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ],
              "group": "Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "auto-init",
          "type": "command",
          "summary": "Automatically generate a config from Fruit Manager",
          "description": "Automatically generate a config from Fruit Manager",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
          "options": [
            {
              "name": "user-config",
              "aliases": [
                "uc"
              ],
              "description": "Save config in the user layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "global-config",
              "aliases": [
                "gc"
              ],
              "description": "Save config in the global layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "dry-run",
              "aliases": [
                "dr",
                "dry"
              ],
              "description": "Display the outcome of the initialization without saving",
              "type": "boolean",
              "conflictsWith": [
                "edit"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "overwrite",
              "aliases": [
                "ow"
              ],
              "description": "Replaces an existing configuration with a new configuration",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options",
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "f"
              ],
              "description": "Confirms the overwrite option",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            }
          ],
          "customize": {},
          "profile": {
            "optional": [
              "base"
            ]
          },
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "profiles",
      "description": "Create and manage configuration profiles.",
      "type": "group",
      "deprecatedReplacement": "The 'config init' command",
      "children": [
        {
          "name": "create",
          "description": "Create new configuration profiles.",
          "summary": "Create new configuration profiles",
          "aliases": [
            "cre"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config init' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Create a secured profile",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the secured profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Create a base profile",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the base profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "update",
          "description": "Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
          "summary": "Update existing profiles",
          "aliases": [
            "upd"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Update a secured profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Update a base profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "delete",
          "description": "Delete existing profiles.",
          "summary": "Delete existing profiles",
          "aliases": [
            "rm"
          ],
          "type": "group",
          "deprecatedReplacement": "Edit your Zowe V2 configuration imperative-test-cli.config.json",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Delete a secured profile.",
              "description": "Delete a secured profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the secured  profile to be deleted. You can also load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a secured profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Delete a base profile.",
              "description": "Delete a base profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the base  profile to be deleted. You can also load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a base profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "list",
          "description": "List profiles of the type {{type}}.",
          "summary": "List existing profiles",
          "aliases": [
            "ls"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config list' command",
          "children": [
            {
              "name": "secured-profiles",
              "aliases": [
                "secured"
              ],
              "summary": "List profiles of the type secured.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List secured  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type secured"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type secured and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profiles",
              "aliases": [
                "base"
              ],
              "summary": "List profiles of the type base.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List base  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type base"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type base and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "set-default",
          "summary": "Set which profiles are loaded by default",
          "description": "Set which profiles are loaded by default.",
          "type": "group",
          "aliases": [
            "set"
          ],
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Set the default\n profiles for the secured group",
              "description": "The secured set default-profiles command allows you to set the default profiles for this command group. When a secured command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the secured group. When you issue commands within the secured group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type secured to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Set the default\n profiles for the base group",
              "description": "The base set default-profiles command allows you to set the default profiles for this command group. When a base command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the base group. When you issue commands within the base group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type base to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "auth",
      "description": "Connect to token-based authentication services",
      "type": "group",
      "children": [
        {
          "name": "login",
          "description": "Log in to an authentication service.",
          "summary": "Log in to an authentication service",
          "aliases": [
            "li"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log in to fruit authentication service",
              "description": "Log in to fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "show-token",
                  "aliases": [
                    "st"
                  ],
                  "description": "Show the token when login is successful. If specified, does not save the token to a profile.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "logout",
          "description": "Log out of an authentication service.",
          "summary": "Log out of an authentication service",
          "aliases": [
            "lo"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log out of fruit authentication service",
              "description": "Log out of fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    }
  ],
  "type": "group",
  "options": [
    {
      "name": "version",
      "aliases": [
        "V"
      ],
      "description": "Display the current version of Imperative Package Test CLI",
      "type": "boolean",
      "conflictsWith": [
        "available-commands"
      ],
      "group": "Options"
    },
    {
      "name": "available-commands",
      "aliases": [
        "ac"
      ],
      "description": "Displays a list of available commands",
      "type": "boolean",
      "conflictsWith": [
        "version"
      ],
      "group": "Options"
    },
    {
      "name": "response-format-json",
      "aliases": [
        "rfj"
      ],
      "group": "Global Options",
      "description": "Produce JSON formatted data from a command",
      "type": "boolean"
    },
    {
      "name": "help",
      "aliases": [
        "h"
      ],
      "group": "Global Options",
      "description": "Display help text",
      "type": "boolean"
    },
    {
      "name": "help-web",
      "aliases": [
        "hw"
      ],
      "group": "Global Options",
      "description": "Display HTML help in browser",
      "type": "boolean"
    }
  ],
  "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src/handlers/DefaultRootCommandHandler",
  "isRoot": true,
  "aliases": [],
  "positionals": [],
  "passOn": [
    {
      "property": "options",
      "value": {
        "name": "help-examples",
        "group": "Global Options",
        "description": "Display examples for all the commands in a group",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "command"
        }
      ],
      "merge": true
    },
    {
      "property": "options",
      "value": {
        "name": "show-inputs-only",
        "group": "Global Options",
        "description": "Show command inputs and do not run the command",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "group"
        }
      ],
      "merge": true
    }
  ]
}
[2023/06/29 15:34:41.042] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:41.044] [TRACE] [YargsDefiner.js:61] {
  name: 'test',
  description: 'Test that various imperative features are working',
  summary: 'Test imperative features',
  type: 'group',
  children: [
    {
      name: 'logging',
      description: 'Test that logging is working correctly.',
      summary: 'Test imperative logging',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler',
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-auto-store',
      description: 'Read some config',
      summary: 'Read some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-override',
      description: 'Override some config',
      summary: 'Override some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'masking',
      description: 'Test that masking is working correctly.',
      summary: 'Test imperative masking',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler',
      positionals: [Array],
      options: [Array],
      aliases: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:41.045] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:41.047] [TRACE] [YargsDefiner.js:61] {
  name: 'config',
  type: 'group',
  summary: 'Manage JSON project and global configuration',
  description: 'Manage JSON project and global configuration',
  children: [
    {
      name: 'list',
      aliases: [Array],
      type: 'command',
      summary: 'list config properties',
      description: 'List config properties',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'secure',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler',
      summary: 'secure configuration properties',
      description: 'prompt for secure configuration properties',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'set',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler',
      summary: 'set configuration property',
      description: 'create or update a configuration property',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'init',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler',
      summary: 'init config files',
      description: 'Initialize config files. Defaults to initializing "imperative-test-cli.config.json" in the current working directory unless otherwise specified.\n' +
        '\n' +
        'Use "--user-config" to init "imperative-test-cli.config.user.json". Use "--global-config" to initialize the configuration files in your home "~/.zowe" directory.\n' +
        '\n' +
        'Use "--no-prompt" to skip prompting for values in a CI environment.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'schema',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler',
      summary: 'dumps the JSON schema for the config',
      description: "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'profiles',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler',
      summary: 'displays profile paths',
      description: 'Displays profile paths.',
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'edit',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler',
      summary: 'edit config files',
      description: "Edit an existing config file in your system's default text editor.\n" +
        '\n' +
        'In a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'import',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler',
      summary: 'import config files',
      description: 'Import config files from another location on disk or from an Internet URL.\n' +
        '\n' +
        'If the config `$schema` property points to a relative path, the schema will also be imported.',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'convert-profiles',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler',
      summary: 'Convert profiles to team config',
      description: 'Convert v1 profiles to a global imperative-test-cli.config.json file.',
      options: [Array],
      examples: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'report-env',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler',
      summary: 'Report the state of your working environment',
      description: 'Reports key items from your environment and identifies problem conditions',
      examples: [Array],
      options: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'update-schemas',
      aliases: [Array],
      type: 'command',
      summary: 'update schema files',
      description: 'Update schema files by looking up the directory structure.\n' +
        '\n' +
        'Schema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler',
      positionals: [],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'auto-init',
      type: 'command',
      summary: 'Automatically generate a config from Fruit Manager',
      description: 'Automatically generate a config from Fruit Manager',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler',
      options: [Array],
      customize: {},
      profile: [Object],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:41.049] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:41.049] [TRACE] [YargsDefiner.js:61] {
  name: 'profiles',
  description: 'Create and manage configuration profiles.',
  type: 'group',
  deprecatedReplacement: "The 'config init' command",
  children: [
    {
      name: 'create',
      description: 'Create new configuration profiles.',
      summary: 'Create new configuration profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config init' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'update',
      description: 'Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.',
      summary: 'Update existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'delete',
      description: 'Delete existing profiles.',
      summary: 'Delete existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: 'Edit your Zowe V2 configuration imperative-test-cli.config.json',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'list',
      description: 'List profiles of the type {{type}}.',
      summary: 'List existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config list' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'set-default',
      summary: 'Set which profiles are loaded by default',
      description: 'Set which profiles are loaded by default.',
      type: 'group',
      aliases: [Array],
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:41.051] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:41.051] [TRACE] [YargsDefiner.js:61] {
  name: 'auth',
  description: 'Connect to token-based authentication services',
  type: 'group',
  children: [
    {
      name: 'login',
      description: 'Log in to an authentication service.',
      summary: 'Log in to an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'logout',
      description: 'Log out of an authentication service.',
      summary: 'Log out of an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:41.052] [TRACE] [main.js:18] This is a trace message after init!
[2023/06/29 15:34:41.053] [DEBUG] [main.js:19] This is a debug message after init!
[2023/06/29 15:34:41.054] [INFO] [main.js:20] This is an info message after init!
[2023/06/29 15:34:41.055] [WARN] [main.js:21] This is a warn message after init!
[2023/06/29 15:34:41.056] [ERROR] [main.js:22] This is an error message after init!
[2023/06/29 15:34:41.057] [FATAL] [main.js:23] This is a fatal message after init!
[2023/06/29 15:34:41.064] [DEBUG] [CommandYargs.js:76] Defining command: logging
[2023/06/29 15:34:41.066] [DEBUG] [CommandYargs.js:175] Building positional string from: logging
[2023/06/29 15:34:41.067] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:41.068] [DEBUG] [CommandYargs.js:76] Defining command: test-config-auto-store
[2023/06/29 15:34:41.069] [DEBUG] [CommandYargs.js:175] Building positional string from: test-config-auto-store
[2023/06/29 15:34:41.069] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:41.070] [DEBUG] [CommandYargs.js:76] Defining command: test-config-override
[2023/06/29 15:34:41.071] [DEBUG] [CommandYargs.js:175] Building positional string from: test-config-override
[2023/06/29 15:34:41.071] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:41.072] [DEBUG] [CommandYargs.js:76] Defining command: masking
[2023/06/29 15:34:41.073] [DEBUG] [CommandYargs.js:175] Building positional string from: masking
[2023/06/29 15:34:41.074] [DEBUG] [CommandYargs.js:181] Positional String:  [test-argument]
[2023/06/29 15:34:41.076] [DEBUG] [CommandYargs.js:95] Defining command builder for: masking
[2023/06/29 15:34:41.079] [DEBUG] [CommandYargs.js:106] Handler invoked for: masking
[2023/06/29 15:34:41.080] [DEBUG] [CommandYargs.js:119] Executing Handlers: masking
[2023/06/29 15:34:41.081] [DEBUG] [CommandYargs.js:137] Executing Handlers (1 total)
[2023/06/29 15:34:41.100] [INFO] [CommandProcessor.js:271] Invoking command "masking"...
[2023/06/29 15:34:41.117] [INFO] [CommandProcessor.js:272] Command issued:

imperative-test-cli test masking **** --rfj


[2023/06/29 15:34:41.118] [TRACE] [CommandProcessor.js:273] Invoke parameters:
{
  arguments: {
    _: [ 'test', 'masking' ],
    rfj: true,
    'response-format-json': true,
    responseFormatJson: true,
    version: undefined,
    V: undefined,
    'available-commands': undefined,
    ac: undefined,
    availableCommands: undefined,
    help: undefined,
    h: undefined,
    'help-web': undefined,
    hw: undefined,
    helpWeb: undefined,
    'help-examples': undefined,
    helpExamples: undefined,
    'show-inputs-only': undefined,
    showInputsOnly: undefined,
    '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
    'test-argument': 'secret',
    testArgument: 'secret'
  },
  silent: false,
  responseFormat: 'json'
}
[2023/06/29 15:34:41.119] [TRACE] [CommandProcessor.js:274] Command definition:
{
  name: 'masking',
  description: 'Test that masking is working correctly.',
  summary: 'Test imperative masking',
  type: 'command',
  handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler',
  positionals: [
    {
      name: 'test-argument',
      description: 'test argument',
      type: 'string',
      required: true
    }
  ],
  options: [
    {
      name: 'show-inputs-only',
      group: 'Global Options',
      description: 'Show command inputs and do not run the command',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [ 'rfj' ],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [ 'h' ],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [ 'hw' ],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  passOn: [],
  children: []
}
[2023/06/29 15:34:41.119] [TRACE] [CommandProcessor.js:852] Constructing response object for "masking" command...
[2023/06/29 15:34:41.121] [INFO] [CommandProcessor.js:307] Preparing (loading profiles, reading stdin, etc.) execution of "masking" command...
[2023/06/29 15:34:41.122] [TRACE] [CommandProcessor.js:717] Base set of arguments from Yargs parse:
{
  _: [ 'test', 'masking' ],
  rfj: true,
  'response-format-json': true,
  responseFormatJson: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:41.123] [TRACE] [CommandProcessor.js:720] Set of options and positionals defined on the command:
[
  {
    name: 'show-inputs-only',
    group: 'Global Options',
    description: 'Show command inputs and do not run the command',
    type: 'boolean',
    aliases: []
  },
  {
    name: 'response-format-json',
    aliases: [ 'rfj' ],
    group: 'Global Options',
    description: 'Produce JSON formatted data from a command',
    type: 'boolean'
  },
  {
    name: 'help',
    aliases: [ 'h' ],
    group: 'Global Options',
    description: 'Display help text',
    type: 'boolean'
  },
  {
    name: 'help-web',
    aliases: [ 'hw' ],
    group: 'Global Options',
    description: 'Display HTML help in browser',
    type: 'boolean'
  },
  {
    name: 'test-argument',
    description: 'test argument',
    type: 'string',
    required: true
  }
]
[2023/06/29 15:34:41.124] [TRACE] [CommandProcessor.js:725] Arguments extracted from :
{
  _: [ 'test', 'masking' ],
  rfj: true,
  'response-format-json': true,
  responseFormatJson: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:41.124] [TRACE] [CommandProcessor.js:727] Arguments merged :
{
  _: [ 'test', 'masking' ],
  rfj: true,
  'response-format-json': true,
  responseFormatJson: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:41.125] [TRACE] [CommandProcessor.js:729] Reading stdin for "masking" command...
[2023/06/29 15:34:41.126] [DEBUG] [SharedOptions.js:61] Standard input reading not requested. Skipping stdin read
[2023/06/29 15:34:41.144] [TRACE] [CommandProcessor.js:788] Arguments extracted from the config:
{}
[2023/06/29 15:34:41.145] [TRACE] [CommandProcessor.js:791] Loading profiles for "masking" command. Profile definitions: undefined
[2023/06/29 15:34:41.145] [TRACE] [CommandProfileLoader.js:53] Profile loader created for command: masking
[2023/06/29 15:34:41.147] [INFO] [CommandProfileLoader.js:83] Request to load profiles for command: masking...
[2023/06/29 15:34:41.147] [TRACE] [CommandProfileLoader.js:84] Profile load arguments supplied:
{
  _: [ 'test', 'masking' ],
  rfj: true,
  'response-format-json': true,
  responseFormatJson: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:41.148] [TRACE] [CommandProcessor.js:797] Profiles loaded for "masking" command:
CommandProfiles { mMetaMap: Map(0) {}, mMap: Map(0) {} }
[2023/06/29 15:34:41.148] [TRACE] [CommandProcessor.js:828] Full argument object constructed:
{
  _: [ 'test', 'masking' ],
  rfj: true,
  'response-format-json': true,
  responseFormatJson: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:41.149] [TRACE] [CommandProcessor.js:852] Constructing response object for "masking" command...
[2023/06/29 15:34:41.150] [INFO] [CommandProcessor.js:211] Performing syntax validation for command "masking"...
[2023/06/29 15:34:41.164] [TRACE] [SyntaxValidator.js:115] no unknown positionals. Length of positional arguments was: %s. Contents of _ were %s, Expected "_" to have length of %s
[2023/06/29 15:34:41.173] [INFO] [CommandProcessor.js:467] Invoking process method of handler for "masking" command.
[2023/06/29 15:34:41.173] [INFO] [CommandProcessor.js:879] Requiring handler "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler" for command "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler"...
[2023/06/29 15:34:41.175] [INFO] [CommandProcessor.js:882] Handler "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler" for command "masking" successfully loaded/required.
[2023/06/29 15:34:41.185] [TRACE] [Masking.handler.js:38] Test-Masking: imperative logger: trace message: secret
[2023/06/29 15:34:41.186] [DEBUG] [Masking.handler.js:39] Test-Masking: imperative logger: debug message: ****
[2023/06/29 15:34:41.186] [INFO] [Masking.handler.js:40] Test-Masking: imperative logger: info message: ****
[2023/06/29 15:34:41.187] [WARN] [Masking.handler.js:41] Test-Masking: imperative logger: warn message: ****
[2023/06/29 15:34:41.188] [ERROR] [Masking.handler.js:42] Test-Masking: imperative logger: error message: ****
[2023/06/29 15:34:41.189] [FATAL] [Masking.handler.js:43] Test-Masking: imperative logger: fatal message: ****
[2023/06/29 15:34:41.194] [INFO] [CommandProcessor.js:498] Handler for command "masking" succeeded.
[2023/06/29 15:34:41.195] [INFO] [CommandProcessor.js:933] Command "masking" completed with success flag: "true"
[2023/06/29 15:34:41.196] [TRACE] [CommandProcessor.js:934] Command "masking" finished. Response object:
{
  success: true,
  exitCode: 0,
  message: '',
  stdout: <Buffer 54 65 73 74 2d 4d 61 73 6b 69 6e 67 3a 20 63 6f 6e 73 6f 6c 65 20 6c 6f 67 67 65 72 3a 20 6c 6f 67 20 6d 65 73 73 61 67 65 3a 20 73 65 63 72 65 74 0a>,
  stderr: <Buffer 54 65 73 74 2d 4d 61 73 6b 69 6e 67 3a 20 63 6f 6e 73 6f 6c 65 20 6c 6f 67 67 65 72 3a 20 65 72 72 6f 72 20 6d 65 73 73 61 67 65 3a 20 73 65 63 72 65 ... 61 more bytes>,
  data: {},
  error: undefined
}
[2023/06/29 15:34:45.734] [TRACE] [AppSettings.js:49] Attempting to load settings file: C:\ourstuff\repos\dev\imperative\__tests__\__results__\data\c27c44e1-a429-4801-85da-a23cd02128a5_imperative_test_cli_test_masking_command\settings\imperative.json
[2023/06/29 15:34:45.735] [TRACE] [AppSettings.js:66] Settings were loaded
[2023/06/29 15:34:45.736] [TRACE] [AppSettings.js:67] Loaded Settings:
[2023/06/29 15:34:45.736] [TRACE] [AppSettings.js:68] { overrides: { CredentialManager: 'imperative-test-cli' } }
[2023/06/29 15:34:45.737] [DEBUG] [ConfigManagementFacility.js:61] ConfigManagementFacility.init() - Start
[2023/06/29 15:34:45.737] [DEBUG] [UpdateImpConfig.js:38] Adding definition = 'config'
[2023/06/29 15:34:45.737] [DEBUG] [ConfigManagementFacility.js:82] ConfigManagementFacility.init() - Success
[2023/06/29 15:34:45.738] [INFO] [Imperative.js:450] Set imperative log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_IMPERATIVE_LOG_LEVEL'
[2023/06/29 15:34:45.738] [INFO] [Imperative.js:468] Set app log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_APP_LOG_LEVEL'
[2023/06/29 15:34:45.740] [DEBUG] [DefaultCredentialManager.js:106] Loading Keytar module from C:\ourstuff\repos\dev\imperative\node_modules\keytar\lib\keytar.js
[2023/06/29 15:34:45.744] [DEBUG] [CredentialManagerFactory.js:136] Initialized the "Imperative Package Test CLI" credential manager for "imperative-test-cli".
[2023/06/29 15:34:45.748] [INFO] [DefaultCredentialManager.js:171] Successfully loaded secure value for service = 'imperative-test-cli' account = 'secure_config_props'
[2023/06/29 15:34:45.750] [INFO] [Imperative.js:247] Loaded and validated config for 'imperative-test-cli'. Config details at trace level of logging.
[2023/06/29 15:34:45.751] [TRACE] [Imperative.js:248] The config object for 'imperative-test-cli' is:
{
  "commandModuleGlobs": [
    "**/cli/*/*definition!(.d).*s"
  ],
  "rootCommandDescription": "A test CLI for the 'imperative' imperative package",
  "defaultHome": "C:\\Users\\ej608771/.imperative-test-cli",
  "productDisplayName": "Imperative Package Test CLI",
  "name": "imperative-test-cli",
  "envVariablePrefix": "IMPERATIVE_TEST_CLI",
  "allowPlugins": false,
  "configAutoInitCommandConfig": {
    "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
    "provider": "Fruit Manager",
    "autoInit": {
      "options": [
        {
          "name": "host",
          "description": "Fruit host",
          "type": "string"
        },
        {
          "name": "port",
          "description": "Fruit port",
          "type": "number"
        },
        {
          "name": "user",
          "description": "Fruit username",
          "type": "string"
        },
        {
          "name": "password",
          "description": "Fruit password",
          "type": "string"
        },
        {
          "name": "token-type",
          "description": "Fruit token type",
          "type": "string"
        },
        {
          "name": "token-value",
          "description": "Fruit token value",
          "type": "string"
        }
      ]
    },
    "profileType": "base"
  },
  "profiles": [
    {
      "type": "secured",
      "schema": {
        "type": "object",
        "title": "Test Secured Fields",
        "description": "Test Secured Fields",
        "properties": {
          "info": {
            "type": "string",
            "includeInTemplate": true,
            "optionDefinition": {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "required": true
            }
          },
          "secret": {
            "type": "string",
            "secure": true,
            "optionDefinition": {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "required": true
            }
          }
        }
      }
    }
  ],
  "baseProfile": {
    "type": "base",
    "schema": {
      "type": "object",
      "title": "Secure Profile",
      "description": "Secure Profile",
      "properties": {
        "info": {
          "type": "string",
          "optionDefinition": {
            "name": "info",
            "description": "The info the keep in the profile.",
            "type": "string"
          }
        },
        "secret": {
          "type": "string",
          "secure": true,
          "includeInTemplate": true,
          "optionDefinition": {
            "name": "secret",
            "description": "The secret info the keep in the profile.",
            "type": "string"
          }
        },
        "host": {
          "type": "string",
          "optionDefinition": {
            "name": "host",
            "description": "Fruit host",
            "type": "string"
          }
        },
        "port": {
          "type": "number",
          "optionDefinition": {
            "name": "port",
            "description": "Fruit port",
            "type": "number"
          }
        },
        "user": {
          "type": "string",
          "optionDefinition": {
            "name": "user",
            "description": "Fruit username",
            "type": "string"
          },
          "secure": true
        },
        "password": {
          "type": "string",
          "optionDefinition": {
            "name": "password",
            "description": "Fruit password",
            "type": "string"
          },
          "secure": true
        },
        "tokenType": {
          "type": "string",
          "optionDefinition": {
            "name": "token-type",
            "description": "Fruit token type",
            "type": "string"
          }
        },
        "tokenValue": {
          "type": "string",
          "optionDefinition": {
            "name": "token-value",
            "description": "Fruit token value",
            "type": "string"
          },
          "secure": true
        }
      }
    },
    "authConfig": [
      {
        "serviceName": "fruit",
        "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
        "login": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string"
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string"
            }
          ]
        },
        "logout": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string"
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string"
            }
          ]
        }
      }
    ]
  },
  "definitions": [
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean"
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ]
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ]
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ]
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ]
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ]
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ]
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ]
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ]
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ]
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ]
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ]
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ]
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ]
        }
      ]
    }
  ],
  "overrides": {},
  "primaryTextColor": "yellow",
  "secondaryTextColor": "blue",
  "allowConfigGroup": true,
  "logging": {
    "imperativeLogging": {
      "apiName": "imperative",
      "category": "imperative"
    },
    "appLogging": {
      "apiName": "app",
      "category": "app"
    }
  }
}
[2023/06/29 15:34:45.753] [DEBUG] [DefinitionTreeResolver.js:89] Combining command definitions from caller directory C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib, 1 command definitions and 1 globs
[2023/06/29 15:34:45.764] [TRACE] [DefinitionTreeResolver.js:102] Matches for glob '**/cli/*/*definition!(.d).*s' from caller directory 'C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib':
cli/test/Test.definition.js 
[2023/06/29 15:34:45.765] [TRACE] [DefinitionTreeResolver.js:105] Attempting load of glob match cli/test/Test.definition.js
[2023/06/29 15:34:45.772] [TRACE] [DefinitionTreeResolver.js:107] Successfully loaded cli/test/Test.definition.js
[2023/06/29 15:34:45.785] [INFO] [Imperative.js:268] Inherited traits applied to CLI command tree children. Cmd tree details at trace level of logging.
[2023/06/29 15:34:45.787] [TRACE] [Imperative.js:270] The CLI command tree before being defined to yargs: {
  "name": "",
  "description": "A test CLI for the 'imperative' imperative package",
  "children": [
    {
      "name": "test",
      "description": "Test that various imperative features are working",
      "summary": "Test imperative features",
      "type": "group",
      "children": [
        {
          "name": "logging",
          "description": "Test that logging is working correctly.",
          "summary": "Test imperative logging",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler",
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-auto-store",
          "description": "Read some config",
          "summary": "Read some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-override",
          "description": "Override some config",
          "summary": "Override some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "someKey",
              "description": "Some key that should override password in prompting.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "masking",
          "description": "Test that masking is working correctly.",
          "summary": "Test imperative masking",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler",
          "positionals": [
            {
              "name": "test-argument",
              "description": "test argument",
              "type": "string",
              "required": true
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ],
              "group": "Options"
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ],
              "group": "Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "auto-init",
          "type": "command",
          "summary": "Automatically generate a config from Fruit Manager",
          "description": "Automatically generate a config from Fruit Manager",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
          "options": [
            {
              "name": "user-config",
              "aliases": [
                "uc"
              ],
              "description": "Save config in the user layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "global-config",
              "aliases": [
                "gc"
              ],
              "description": "Save config in the global layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "dry-run",
              "aliases": [
                "dr",
                "dry"
              ],
              "description": "Display the outcome of the initialization without saving",
              "type": "boolean",
              "conflictsWith": [
                "edit"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "overwrite",
              "aliases": [
                "ow"
              ],
              "description": "Replaces an existing configuration with a new configuration",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options",
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "f"
              ],
              "description": "Confirms the overwrite option",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            }
          ],
          "customize": {},
          "profile": {
            "optional": [
              "base"
            ]
          },
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "profiles",
      "description": "Create and manage configuration profiles.",
      "type": "group",
      "deprecatedReplacement": "The 'config init' command",
      "children": [
        {
          "name": "create",
          "description": "Create new configuration profiles.",
          "summary": "Create new configuration profiles",
          "aliases": [
            "cre"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config init' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Create a secured profile",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the secured profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Create a base profile",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the base profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "update",
          "description": "Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
          "summary": "Update existing profiles",
          "aliases": [
            "upd"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Update a secured profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Update a base profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "delete",
          "description": "Delete existing profiles.",
          "summary": "Delete existing profiles",
          "aliases": [
            "rm"
          ],
          "type": "group",
          "deprecatedReplacement": "Edit your Zowe V2 configuration imperative-test-cli.config.json",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Delete a secured profile.",
              "description": "Delete a secured profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the secured  profile to be deleted. You can also load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a secured profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Delete a base profile.",
              "description": "Delete a base profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the base  profile to be deleted. You can also load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a base profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "list",
          "description": "List profiles of the type {{type}}.",
          "summary": "List existing profiles",
          "aliases": [
            "ls"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config list' command",
          "children": [
            {
              "name": "secured-profiles",
              "aliases": [
                "secured"
              ],
              "summary": "List profiles of the type secured.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List secured  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type secured"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type secured and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profiles",
              "aliases": [
                "base"
              ],
              "summary": "List profiles of the type base.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List base  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type base"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type base and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "set-default",
          "summary": "Set which profiles are loaded by default",
          "description": "Set which profiles are loaded by default.",
          "type": "group",
          "aliases": [
            "set"
          ],
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Set the default\n profiles for the secured group",
              "description": "The secured set default-profiles command allows you to set the default profiles for this command group. When a secured command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the secured group. When you issue commands within the secured group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type secured to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Set the default\n profiles for the base group",
              "description": "The base set default-profiles command allows you to set the default profiles for this command group. When a base command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the base group. When you issue commands within the base group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type base to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "auth",
      "description": "Connect to token-based authentication services",
      "type": "group",
      "children": [
        {
          "name": "login",
          "description": "Log in to an authentication service.",
          "summary": "Log in to an authentication service",
          "aliases": [
            "li"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log in to fruit authentication service",
              "description": "Log in to fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "show-token",
                  "aliases": [
                    "st"
                  ],
                  "description": "Show the token when login is successful. If specified, does not save the token to a profile.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "logout",
          "description": "Log out of an authentication service.",
          "summary": "Log out of an authentication service",
          "aliases": [
            "lo"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log out of fruit authentication service",
              "description": "Log out of fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    }
  ],
  "type": "group",
  "options": [
    {
      "name": "version",
      "aliases": [
        "V"
      ],
      "description": "Display the current version of Imperative Package Test CLI",
      "type": "boolean",
      "conflictsWith": [
        "available-commands"
      ],
      "group": "Options"
    },
    {
      "name": "available-commands",
      "aliases": [
        "ac"
      ],
      "description": "Displays a list of available commands",
      "type": "boolean",
      "conflictsWith": [
        "version"
      ],
      "group": "Options"
    },
    {
      "name": "response-format-json",
      "aliases": [
        "rfj"
      ],
      "group": "Global Options",
      "description": "Produce JSON formatted data from a command",
      "type": "boolean"
    },
    {
      "name": "help",
      "aliases": [
        "h"
      ],
      "group": "Global Options",
      "description": "Display help text",
      "type": "boolean"
    },
    {
      "name": "help-web",
      "aliases": [
        "hw"
      ],
      "group": "Global Options",
      "description": "Display HTML help in browser",
      "type": "boolean"
    }
  ],
  "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src/handlers/DefaultRootCommandHandler",
  "isRoot": true,
  "aliases": [],
  "positionals": [],
  "passOn": [
    {
      "property": "options",
      "value": {
        "name": "help-examples",
        "group": "Global Options",
        "description": "Display examples for all the commands in a group",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "command"
        }
      ],
      "merge": true
    },
    {
      "property": "options",
      "value": {
        "name": "show-inputs-only",
        "group": "Global Options",
        "description": "Show command inputs and do not run the command",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "group"
        }
      ],
      "merge": true
    }
  ]
}
[2023/06/29 15:34:45.791] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:45.792] [TRACE] [YargsDefiner.js:61] {
  name: 'test',
  description: 'Test that various imperative features are working',
  summary: 'Test imperative features',
  type: 'group',
  children: [
    {
      name: 'logging',
      description: 'Test that logging is working correctly.',
      summary: 'Test imperative logging',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler',
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-auto-store',
      description: 'Read some config',
      summary: 'Read some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-override',
      description: 'Override some config',
      summary: 'Override some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'masking',
      description: 'Test that masking is working correctly.',
      summary: 'Test imperative masking',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler',
      positionals: [Array],
      options: [Array],
      aliases: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:45.793] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:45.796] [TRACE] [YargsDefiner.js:61] {
  name: 'config',
  type: 'group',
  summary: 'Manage JSON project and global configuration',
  description: 'Manage JSON project and global configuration',
  children: [
    {
      name: 'list',
      aliases: [Array],
      type: 'command',
      summary: 'list config properties',
      description: 'List config properties',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'secure',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler',
      summary: 'secure configuration properties',
      description: 'prompt for secure configuration properties',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'set',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler',
      summary: 'set configuration property',
      description: 'create or update a configuration property',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'init',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler',
      summary: 'init config files',
      description: 'Initialize config files. Defaults to initializing "imperative-test-cli.config.json" in the current working directory unless otherwise specified.\n' +
        '\n' +
        'Use "--user-config" to init "imperative-test-cli.config.user.json". Use "--global-config" to initialize the configuration files in your home "~/.zowe" directory.\n' +
        '\n' +
        'Use "--no-prompt" to skip prompting for values in a CI environment.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'schema',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler',
      summary: 'dumps the JSON schema for the config',
      description: "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'profiles',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler',
      summary: 'displays profile paths',
      description: 'Displays profile paths.',
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'edit',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler',
      summary: 'edit config files',
      description: "Edit an existing config file in your system's default text editor.\n" +
        '\n' +
        'In a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'import',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler',
      summary: 'import config files',
      description: 'Import config files from another location on disk or from an Internet URL.\n' +
        '\n' +
        'If the config `$schema` property points to a relative path, the schema will also be imported.',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'convert-profiles',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler',
      summary: 'Convert profiles to team config',
      description: 'Convert v1 profiles to a global imperative-test-cli.config.json file.',
      options: [Array],
      examples: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'report-env',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler',
      summary: 'Report the state of your working environment',
      description: 'Reports key items from your environment and identifies problem conditions',
      examples: [Array],
      options: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'update-schemas',
      aliases: [Array],
      type: 'command',
      summary: 'update schema files',
      description: 'Update schema files by looking up the directory structure.\n' +
        '\n' +
        'Schema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler',
      positionals: [],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'auto-init',
      type: 'command',
      summary: 'Automatically generate a config from Fruit Manager',
      description: 'Automatically generate a config from Fruit Manager',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler',
      options: [Array],
      customize: {},
      profile: [Object],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:45.797] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:45.798] [TRACE] [YargsDefiner.js:61] {
  name: 'profiles',
  description: 'Create and manage configuration profiles.',
  type: 'group',
  deprecatedReplacement: "The 'config init' command",
  children: [
    {
      name: 'create',
      description: 'Create new configuration profiles.',
      summary: 'Create new configuration profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config init' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'update',
      description: 'Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.',
      summary: 'Update existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'delete',
      description: 'Delete existing profiles.',
      summary: 'Delete existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: 'Edit your Zowe V2 configuration imperative-test-cli.config.json',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'list',
      description: 'List profiles of the type {{type}}.',
      summary: 'List existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config list' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'set-default',
      summary: 'Set which profiles are loaded by default',
      description: 'Set which profiles are loaded by default.',
      type: 'group',
      aliases: [Array],
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:45.799] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:45.800] [TRACE] [YargsDefiner.js:61] {
  name: 'auth',
  description: 'Connect to token-based authentication services',
  type: 'group',
  children: [
    {
      name: 'login',
      description: 'Log in to an authentication service.',
      summary: 'Log in to an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'logout',
      description: 'Log out of an authentication service.',
      summary: 'Log out of an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:45.801] [TRACE] [main.js:18] This is a trace message after init!
[2023/06/29 15:34:45.802] [DEBUG] [main.js:19] This is a debug message after init!
[2023/06/29 15:34:45.803] [INFO] [main.js:20] This is an info message after init!
[2023/06/29 15:34:45.804] [WARN] [main.js:21] This is a warn message after init!
[2023/06/29 15:34:45.805] [ERROR] [main.js:22] This is an error message after init!
[2023/06/29 15:34:45.806] [FATAL] [main.js:23] This is a fatal message after init!
[2023/06/29 15:34:45.813] [DEBUG] [CommandYargs.js:76] Defining command: logging
[2023/06/29 15:34:45.816] [DEBUG] [CommandYargs.js:175] Building positional string from: logging
[2023/06/29 15:34:45.817] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:45.818] [DEBUG] [CommandYargs.js:76] Defining command: test-config-auto-store
[2023/06/29 15:34:45.819] [DEBUG] [CommandYargs.js:175] Building positional string from: test-config-auto-store
[2023/06/29 15:34:45.819] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:45.820] [DEBUG] [CommandYargs.js:76] Defining command: test-config-override
[2023/06/29 15:34:45.821] [DEBUG] [CommandYargs.js:175] Building positional string from: test-config-override
[2023/06/29 15:34:45.822] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:45.823] [DEBUG] [CommandYargs.js:76] Defining command: masking
[2023/06/29 15:34:45.824] [DEBUG] [CommandYargs.js:175] Building positional string from: masking
[2023/06/29 15:34:45.825] [DEBUG] [CommandYargs.js:181] Positional String:  [test-argument]
[2023/06/29 15:34:45.827] [DEBUG] [CommandYargs.js:95] Defining command builder for: masking
[2023/06/29 15:34:45.830] [DEBUG] [CommandYargs.js:106] Handler invoked for: masking
[2023/06/29 15:34:45.831] [DEBUG] [CommandYargs.js:119] Executing Handlers: masking
[2023/06/29 15:34:45.833] [DEBUG] [CommandYargs.js:137] Executing Handlers (1 total)
[2023/06/29 15:34:45.853] [INFO] [CommandProcessor.js:271] Invoking command "masking"...
[2023/06/29 15:34:45.871] [INFO] [CommandProcessor.js:272] Command issued:

imperative-test-cli test masking ****


[2023/06/29 15:34:45.872] [TRACE] [CommandProcessor.js:273] Invoke parameters:
{
  arguments: {
    _: [ 'test', 'masking' ],
    version: undefined,
    V: undefined,
    'available-commands': undefined,
    ac: undefined,
    availableCommands: undefined,
    'response-format-json': undefined,
    rfj: undefined,
    responseFormatJson: undefined,
    help: undefined,
    h: undefined,
    'help-web': undefined,
    hw: undefined,
    helpWeb: undefined,
    'help-examples': undefined,
    helpExamples: undefined,
    'show-inputs-only': undefined,
    showInputsOnly: undefined,
    '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
    'test-argument': 'secret',
    testArgument: 'secret'
  },
  silent: false,
  responseFormat: 'default'
}
[2023/06/29 15:34:45.873] [TRACE] [CommandProcessor.js:274] Command definition:
{
  name: 'masking',
  description: 'Test that masking is working correctly.',
  summary: 'Test imperative masking',
  type: 'command',
  handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler',
  positionals: [
    {
      name: 'test-argument',
      description: 'test argument',
      type: 'string',
      required: true
    }
  ],
  options: [
    {
      name: 'show-inputs-only',
      group: 'Global Options',
      description: 'Show command inputs and do not run the command',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [ 'rfj' ],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [ 'h' ],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [ 'hw' ],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  passOn: [],
  children: []
}
[2023/06/29 15:34:45.873] [TRACE] [CommandProcessor.js:852] Constructing response object for "masking" command...
[2023/06/29 15:34:45.874] [INFO] [CommandProcessor.js:307] Preparing (loading profiles, reading stdin, etc.) execution of "masking" command...
[2023/06/29 15:34:45.875] [TRACE] [CommandProcessor.js:717] Base set of arguments from Yargs parse:
{
  _: [ 'test', 'masking' ],
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:45.876] [TRACE] [CommandProcessor.js:720] Set of options and positionals defined on the command:
[
  {
    name: 'show-inputs-only',
    group: 'Global Options',
    description: 'Show command inputs and do not run the command',
    type: 'boolean',
    aliases: []
  },
  {
    name: 'response-format-json',
    aliases: [ 'rfj' ],
    group: 'Global Options',
    description: 'Produce JSON formatted data from a command',
    type: 'boolean'
  },
  {
    name: 'help',
    aliases: [ 'h' ],
    group: 'Global Options',
    description: 'Display help text',
    type: 'boolean'
  },
  {
    name: 'help-web',
    aliases: [ 'hw' ],
    group: 'Global Options',
    description: 'Display HTML help in browser',
    type: 'boolean'
  },
  {
    name: 'test-argument',
    description: 'test argument',
    type: 'string',
    required: true
  }
]
[2023/06/29 15:34:45.877] [TRACE] [CommandProcessor.js:725] Arguments extracted from :
{
  _: [ 'test', 'masking' ],
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:45.878] [TRACE] [CommandProcessor.js:727] Arguments merged :
{
  _: [ 'test', 'masking' ],
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:45.878] [TRACE] [CommandProcessor.js:729] Reading stdin for "masking" command...
[2023/06/29 15:34:45.879] [DEBUG] [SharedOptions.js:61] Standard input reading not requested. Skipping stdin read
[2023/06/29 15:34:45.899] [TRACE] [CommandProcessor.js:788] Arguments extracted from the config:
{}
[2023/06/29 15:34:45.899] [TRACE] [CommandProcessor.js:791] Loading profiles for "masking" command. Profile definitions: undefined
[2023/06/29 15:34:45.900] [TRACE] [CommandProfileLoader.js:53] Profile loader created for command: masking
[2023/06/29 15:34:45.901] [INFO] [CommandProfileLoader.js:83] Request to load profiles for command: masking...
[2023/06/29 15:34:45.902] [TRACE] [CommandProfileLoader.js:84] Profile load arguments supplied:
{
  _: [ 'test', 'masking' ],
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:45.902] [TRACE] [CommandProcessor.js:797] Profiles loaded for "masking" command:
CommandProfiles { mMetaMap: Map(0) {}, mMap: Map(0) {} }
[2023/06/29 15:34:45.903] [TRACE] [CommandProcessor.js:828] Full argument object constructed:
{
  _: [ 'test', 'masking' ],
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:45.903] [TRACE] [CommandProcessor.js:852] Constructing response object for "masking" command...
[2023/06/29 15:34:45.904] [INFO] [CommandProcessor.js:211] Performing syntax validation for command "masking"...
[2023/06/29 15:34:45.919] [TRACE] [SyntaxValidator.js:115] no unknown positionals. Length of positional arguments was: %s. Contents of _ were %s, Expected "_" to have length of %s
[2023/06/29 15:34:45.920] [INFO] [CommandProcessor.js:467] Invoking process method of handler for "masking" command.
[2023/06/29 15:34:45.921] [INFO] [CommandProcessor.js:879] Requiring handler "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler" for command "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler"...
[2023/06/29 15:34:45.923] [INFO] [CommandProcessor.js:882] Handler "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler" for command "masking" successfully loaded/required.
[2023/06/29 15:34:45.934] [TRACE] [Masking.handler.js:38] Test-Masking: imperative logger: trace message: secret
[2023/06/29 15:34:45.935] [DEBUG] [Masking.handler.js:39] Test-Masking: imperative logger: debug message: ****
[2023/06/29 15:34:45.935] [INFO] [Masking.handler.js:40] Test-Masking: imperative logger: info message: ****
[2023/06/29 15:34:45.936] [WARN] [Masking.handler.js:41] Test-Masking: imperative logger: warn message: ****
[2023/06/29 15:34:45.937] [ERROR] [Masking.handler.js:42] Test-Masking: imperative logger: error message: ****
[2023/06/29 15:34:45.938] [FATAL] [Masking.handler.js:43] Test-Masking: imperative logger: fatal message: ****
[2023/06/29 15:34:45.943] [INFO] [CommandProcessor.js:498] Handler for command "masking" succeeded.
[2023/06/29 15:34:45.944] [INFO] [CommandProcessor.js:933] Command "masking" completed with success flag: "true"
[2023/06/29 15:34:45.945] [TRACE] [CommandProcessor.js:934] Command "masking" finished. Response object:
{
  success: true,
  exitCode: 0,
  message: '',
  stdout: <Buffer 54 65 73 74 2d 4d 61 73 6b 69 6e 67 3a 20 63 6f 6e 73 6f 6c 65 20 6c 6f 67 67 65 72 3a 20 6c 6f 67 20 6d 65 73 73 61 67 65 3a 20 2a 2a 2a 2a 0a>,
  stderr: <Buffer 54 65 73 74 2d 4d 61 73 6b 69 6e 67 3a 20 63 6f 6e 73 6f 6c 65 20 6c 6f 67 67 65 72 3a 20 65 72 72 6f 72 20 6d 65 73 73 61 67 65 3a 20 2a 2a 2a 2a 0a ... 57 more bytes>,
  data: {},
  error: undefined
}
[2023/06/29 15:34:50.377] [TRACE] [AppSettings.js:49] Attempting to load settings file: C:\ourstuff\repos\dev\imperative\__tests__\__results__\data\c27c44e1-a429-4801-85da-a23cd02128a5_imperative_test_cli_test_masking_command\settings\imperative.json
[2023/06/29 15:34:50.378] [TRACE] [AppSettings.js:66] Settings were loaded
[2023/06/29 15:34:50.379] [TRACE] [AppSettings.js:67] Loaded Settings:
[2023/06/29 15:34:50.379] [TRACE] [AppSettings.js:68] { overrides: { CredentialManager: 'imperative-test-cli' } }
[2023/06/29 15:34:50.380] [DEBUG] [ConfigManagementFacility.js:61] ConfigManagementFacility.init() - Start
[2023/06/29 15:34:50.380] [DEBUG] [UpdateImpConfig.js:38] Adding definition = 'config'
[2023/06/29 15:34:50.381] [DEBUG] [ConfigManagementFacility.js:82] ConfigManagementFacility.init() - Success
[2023/06/29 15:34:50.381] [INFO] [Imperative.js:450] Set imperative log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_IMPERATIVE_LOG_LEVEL'
[2023/06/29 15:34:50.382] [INFO] [Imperative.js:468] Set app log level to ALL from environmental variable setting 'IMPERATIVE_TEST_CLI_APP_LOG_LEVEL'
[2023/06/29 15:34:50.383] [DEBUG] [DefaultCredentialManager.js:106] Loading Keytar module from C:\ourstuff\repos\dev\imperative\node_modules\keytar\lib\keytar.js
[2023/06/29 15:34:50.388] [DEBUG] [CredentialManagerFactory.js:136] Initialized the "Imperative Package Test CLI" credential manager for "imperative-test-cli".
[2023/06/29 15:34:50.392] [INFO] [DefaultCredentialManager.js:171] Successfully loaded secure value for service = 'imperative-test-cli' account = 'secure_config_props'
[2023/06/29 15:34:50.394] [INFO] [Imperative.js:247] Loaded and validated config for 'imperative-test-cli'. Config details at trace level of logging.
[2023/06/29 15:34:50.395] [TRACE] [Imperative.js:248] The config object for 'imperative-test-cli' is:
{
  "commandModuleGlobs": [
    "**/cli/*/*definition!(.d).*s"
  ],
  "rootCommandDescription": "A test CLI for the 'imperative' imperative package",
  "defaultHome": "C:\\Users\\ej608771/.imperative-test-cli",
  "productDisplayName": "Imperative Package Test CLI",
  "name": "imperative-test-cli",
  "envVariablePrefix": "IMPERATIVE_TEST_CLI",
  "allowPlugins": false,
  "configAutoInitCommandConfig": {
    "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
    "provider": "Fruit Manager",
    "autoInit": {
      "options": [
        {
          "name": "host",
          "description": "Fruit host",
          "type": "string"
        },
        {
          "name": "port",
          "description": "Fruit port",
          "type": "number"
        },
        {
          "name": "user",
          "description": "Fruit username",
          "type": "string"
        },
        {
          "name": "password",
          "description": "Fruit password",
          "type": "string"
        },
        {
          "name": "token-type",
          "description": "Fruit token type",
          "type": "string"
        },
        {
          "name": "token-value",
          "description": "Fruit token value",
          "type": "string"
        }
      ]
    },
    "profileType": "base"
  },
  "profiles": [
    {
      "type": "secured",
      "schema": {
        "type": "object",
        "title": "Test Secured Fields",
        "description": "Test Secured Fields",
        "properties": {
          "info": {
            "type": "string",
            "includeInTemplate": true,
            "optionDefinition": {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "required": true
            }
          },
          "secret": {
            "type": "string",
            "secure": true,
            "optionDefinition": {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "required": true
            }
          }
        }
      }
    }
  ],
  "baseProfile": {
    "type": "base",
    "schema": {
      "type": "object",
      "title": "Secure Profile",
      "description": "Secure Profile",
      "properties": {
        "info": {
          "type": "string",
          "optionDefinition": {
            "name": "info",
            "description": "The info the keep in the profile.",
            "type": "string"
          }
        },
        "secret": {
          "type": "string",
          "secure": true,
          "includeInTemplate": true,
          "optionDefinition": {
            "name": "secret",
            "description": "The secret info the keep in the profile.",
            "type": "string"
          }
        },
        "host": {
          "type": "string",
          "optionDefinition": {
            "name": "host",
            "description": "Fruit host",
            "type": "string"
          }
        },
        "port": {
          "type": "number",
          "optionDefinition": {
            "name": "port",
            "description": "Fruit port",
            "type": "number"
          }
        },
        "user": {
          "type": "string",
          "optionDefinition": {
            "name": "user",
            "description": "Fruit username",
            "type": "string"
          },
          "secure": true
        },
        "password": {
          "type": "string",
          "optionDefinition": {
            "name": "password",
            "description": "Fruit password",
            "type": "string"
          },
          "secure": true
        },
        "tokenType": {
          "type": "string",
          "optionDefinition": {
            "name": "token-type",
            "description": "Fruit token type",
            "type": "string"
          }
        },
        "tokenValue": {
          "type": "string",
          "optionDefinition": {
            "name": "token-value",
            "description": "Fruit token value",
            "type": "string"
          },
          "secure": true
        }
      }
    },
    "authConfig": [
      {
        "serviceName": "fruit",
        "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
        "login": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string"
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string"
            }
          ]
        },
        "logout": {
          "options": [
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string"
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number"
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string"
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string"
            }
          ]
        }
      }
    ]
  },
  "definitions": [
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean"
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ]
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ]
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ]
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ]
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ]
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ]
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ]
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ]
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ]
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ]
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ]
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ]
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ]
        }
      ]
    }
  ],
  "overrides": {},
  "primaryTextColor": "yellow",
  "secondaryTextColor": "blue",
  "allowConfigGroup": true,
  "logging": {
    "imperativeLogging": {
      "apiName": "imperative",
      "category": "imperative"
    },
    "appLogging": {
      "apiName": "app",
      "category": "app"
    }
  }
}
[2023/06/29 15:34:50.397] [DEBUG] [DefinitionTreeResolver.js:89] Combining command definitions from caller directory C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib, 1 command definitions and 1 globs
[2023/06/29 15:34:50.408] [TRACE] [DefinitionTreeResolver.js:102] Matches for glob '**/cli/*/*definition!(.d).*s' from caller directory 'C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib':
cli/test/Test.definition.js 
[2023/06/29 15:34:50.408] [TRACE] [DefinitionTreeResolver.js:105] Attempting load of glob match cli/test/Test.definition.js
[2023/06/29 15:34:50.416] [TRACE] [DefinitionTreeResolver.js:107] Successfully loaded cli/test/Test.definition.js
[2023/06/29 15:34:50.431] [INFO] [Imperative.js:268] Inherited traits applied to CLI command tree children. Cmd tree details at trace level of logging.
[2023/06/29 15:34:50.432] [TRACE] [Imperative.js:270] The CLI command tree before being defined to yargs: {
  "name": "",
  "description": "A test CLI for the 'imperative' imperative package",
  "children": [
    {
      "name": "test",
      "description": "Test that various imperative features are working",
      "summary": "Test imperative features",
      "type": "group",
      "children": [
        {
          "name": "logging",
          "description": "Test that logging is working correctly.",
          "summary": "Test imperative logging",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler",
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-auto-store",
          "description": "Read some config",
          "summary": "Read some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "test-config-override",
          "description": "Override some config",
          "summary": "Override some config",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler",
          "profile": {
            "optional": [
              "base",
              "base"
            ]
          },
          "options": [
            {
              "name": "someKey",
              "description": "Some key that should override password in prompting.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            },
            {
              "name": "info",
              "description": "The info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secret",
              "description": "The secret info the keep in the profile.",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "masking",
          "description": "Test that masking is working correctly.",
          "summary": "Test imperative masking",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler",
          "positionals": [
            {
              "name": "test-argument",
              "description": "test argument",
              "type": "string",
              "required": true
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "config",
      "type": "group",
      "summary": "Manage JSON project and global configuration",
      "description": "Manage JSON project and global configuration",
      "children": [
        {
          "name": "list",
          "aliases": [
            "ls"
          ],
          "type": "command",
          "summary": "list config properties",
          "description": "List config properties",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler",
          "positionals": [
            {
              "name": "property",
              "description": "The config property to list. Blank to list all properties.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "locations",
              "description": "Separate the config properties into their respective config file locations. Helpful to determine where configuration value is specified.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "root",
              "description": "List only the root level property names. For example, specify in addition to '--locations' to get a list of config file paths only.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "List property names for a specified config property",
              "options": "\"defaults\""
            },
            {
              "description": "List only root level property names for a specified config property",
              "options": "\"defaults\" --root"
            },
            {
              "description": "List config properties by separating them by their respective config file locations",
              "options": "--locations"
            },
            {
              "description": "List only the root level configuration property names",
              "options": "--root"
            },
            {
              "description": "List only the root level configuration properties by separating them by their respective config file locations",
              "options": "--locations --root"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "secure",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler",
          "summary": "secure configuration properties",
          "description": "prompt for secure configuration properties",
          "options": [
            {
              "name": "global-config",
              "description": "Secure properties in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Secure properties in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prune",
              "description": "Delete properties stored in the vault for team config files that do not exist.",
              "aliases": [
                "p"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Secure the properties in global config",
              "options": "--global-config"
            },
            {
              "description": "Secure the properties in user config",
              "options": "--user-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "set",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler",
          "summary": "set configuration property",
          "description": "create or update a configuration property",
          "positionals": [
            {
              "name": "property",
              "description": "The property to set. You may specify a path using dot notation (e.g. profiles.host1.profiles.service1.properties.setting)",
              "required": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "The property value to set. The value may be JSON. Use '--json' to indicate.",
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Set the property in global config.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Set the property in user config.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "json",
              "description": "The property value is JSON.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "secure",
              "description": "Store the property value securely. If omitted, any property named in the secure array of the config file will be saved securely.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Set the property in global config",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --global-config"
            },
            {
              "description": "Set the property in user config",
              "options": "\"profiles.host1.profiles.service2.properties.setting\" \"value\" --user-config"
            },
            {
              "description": "Set property value to JSON",
              "options": "\"profiles.host1.profiles.service3.properties.setting\" \"{\"property\":\"value\"}\" --json"
            },
            {
              "description": "Store the property value",
              "options": "\"profiles.host1.profiles.service1.properties.setting\" \"value\" --secure"
            },
            {
              "description": "Set a default zosmf profile",
              "options": "\"defaults.zosmf\" \"zosmfProfileName\""
            },
            {
              "description": "Set a default tso profile",
              "options": "\"defaults.tso\" \"tsoProfileName\""
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "init",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler",
          "summary": "init config files",
          "description": "Initialize config files. Defaults to initializing \"imperative-test-cli.config.json\" in the current working directory unless otherwise specified.\n\nUse \"--user-config\" to init \"imperative-test-cli.config.user.json\". Use \"--global-config\" to initialize the configuration files in your home \"~/.zowe\" directory.\n\nUse \"--no-prompt\" to skip prompting for values in a CI environment.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "prompt",
              "description": "Prompt for missing values in the base profile. Useful for disabling prompting in CI environments.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "overwrite",
              "description": "Replace existing config files instead of merging the new changes.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "implies": [
                "for-sure"
              ],
              "group": "Options"
            },
            {
              "name": "for-sure",
              "aliases": [
                "fs"
              ],
              "description": "Confirms the overwrite option.",
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "dry-run",
              "description": "Display the outcome of the initialization without saving it.",
              "aliases": [
                "dr",
                "dry"
              ],
              "type": "boolean",
              "conflictsWith": [
                "edit",
                "overwrite",
                "prompt"
              ],
              "group": "Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Initialize configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config"
            },
            {
              "description": "Do a dry run of initializing configuration files in your home \"~/.zowe\" directory",
              "options": "--global-config --dry-run"
            },
            {
              "description": "Initialize the user config files",
              "options": "--user-config"
            },
            {
              "description": "Initialize the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false"
            },
            {
              "description": "Do a dry run of initializing the user config files and do not prompt for secure values",
              "options": "--user-config --prompt false --dry-run"
            },
            {
              "description": "Overwrite any existing global config files",
              "options": "--global-config --overwrite --for-sure"
            },
            {
              "description": "Overwrite any existing user config files",
              "options": "--user-config --overwrite --for-sure"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "schema",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler",
          "summary": "dumps the JSON schema for the config",
          "description": "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
          "examples": [
            {
              "description": "Display the JSON schema for the config",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "profiles",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler",
          "summary": "displays profile paths",
          "description": "Displays profile paths.",
          "examples": [
            {
              "description": "Display profile paths",
              "options": ""
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "edit",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler",
          "summary": "edit config files",
          "description": "Edit an existing config file in your system's default text editor.\n\nIn a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.",
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Edit global config file",
              "options": "--global-config"
            }
          ],
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "import",
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler",
          "summary": "import config files",
          "description": "Import config files from another location on disk or from an Internet URL.\n\nIf the config `$schema` property points to a relative path, the schema will also be imported.",
          "positionals": [
            {
              "name": "location",
              "description": "File path or URL to import from.",
              "required": true,
              "type": "string"
            }
          ],
          "options": [
            {
              "name": "global-config",
              "description": "Target the global config files.",
              "aliases": [
                "gc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user-config",
              "description": "Target the user config files.",
              "aliases": [
                "uc"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "overwrite",
              "description": "Overwrite config file if one already exists.",
              "aliases": [
                "ow"
              ],
              "type": "boolean",
              "defaultValue": false,
              "group": "Options"
            },
            {
              "name": "user",
              "aliases": [
                "u"
              ],
              "description": "User name if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "password"
              ],
              "group": "Connection Options"
            },
            {
              "name": "password",
              "aliases": [
                "pass",
                "pw"
              ],
              "description": "Password if authentication is required to download the config from a URL.",
              "type": "string",
              "implies": [
                "user"
              ],
              "group": "Connection Options"
            },
            {
              "name": "reject-unauthorized",
              "aliases": [
                "ru"
              ],
              "description": "Reject self-signed certificates if config is downloaded from an HTTPS URL.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Connection Options"
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Import config from local file on disk",
              "options": "~/Downloads/zowe.config.json"
            },
            {
              "description": "Import global config from Internet URL",
              "options": "https://example.com/zowe.config.json --global-config"
            }
          ],
          "aliases": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "convert-profiles",
          "aliases": [
            "convert"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler",
          "summary": "Convert profiles to team config",
          "description": "Convert v1 profiles to a global imperative-test-cli.config.json file.",
          "options": [
            {
              "name": "prompt",
              "description": "Prompt for confirmation. Use --no-prompt to disable prompting.",
              "type": "boolean",
              "defaultValue": true,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "delete",
              "description": "Delete the existing profiles on disk and any securely stored secrets.",
              "type": "boolean",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Convert profiles to team config without prompting",
              "options": "--no-prompt"
            },
            {
              "description": "Convert profiles to team config and delete the old profiles",
              "options": "--delete"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "report-env",
          "aliases": [
            "re"
          ],
          "type": "command",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler",
          "summary": "Report the state of your working environment",
          "description": "Reports key items from your environment and identifies problem conditions",
          "examples": [
            {
              "description": "Report information and issues about your working environment",
              "options": ""
            },
            {
              "description": "Save the report about your working environment to a file",
              "options": "> report.log"
            }
          ],
          "options": [
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": [],
          "children": []
        },
        {
          "name": "update-schemas",
          "aliases": [
            "us"
          ],
          "type": "command",
          "summary": "update schema files",
          "description": "Update schema files by looking up the directory structure.\n\nSchema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler",
          "positionals": [],
          "options": [
            {
              "name": "depth",
              "description": "Specifies how many levels down the directory structure should the schemas be updated.",
              "type": "number",
              "defaultValue": 0,
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "examples": [
            {
              "description": "Update all schema files found in higher level directories",
              "options": ""
            },
            {
              "description": "Update all schema files found in higher level directories and 2 levels down the directory structure",
              "options": "--depth 2"
            }
          ],
          "passOn": [],
          "children": []
        },
        {
          "name": "auto-init",
          "type": "command",
          "summary": "Automatically generate a config from Fruit Manager",
          "description": "Automatically generate a config from Fruit Manager",
          "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler",
          "options": [
            {
              "name": "user-config",
              "aliases": [
                "uc"
              ],
              "description": "Save config in the user layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "global-config",
              "aliases": [
                "gc"
              ],
              "description": "Save config in the global layer",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "dry-run",
              "aliases": [
                "dr",
                "dry"
              ],
              "description": "Display the outcome of the initialization without saving",
              "type": "boolean",
              "conflictsWith": [
                "edit"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "edit",
              "aliases": [
                "e"
              ],
              "description": "Open in editor after initializing the configuration",
              "type": "boolean",
              "conflictsWith": [
                "dry-run"
              ],
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "overwrite",
              "aliases": [
                "ow"
              ],
              "description": "Replaces an existing configuration with a new configuration",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options",
              "implies": [
                "for-sure"
              ]
            },
            {
              "name": "for-sure",
              "aliases": [
                "f"
              ],
              "description": "Confirms the overwrite option",
              "type": "boolean",
              "defaultValue": false,
              "group": "Automatic Config Initialization Options"
            },
            {
              "name": "host",
              "description": "Fruit host",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "port",
              "description": "Fruit port",
              "type": "number",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "user",
              "description": "Fruit username",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "password",
              "description": "Fruit password",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-type",
              "description": "Fruit token type",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "token-value",
              "description": "Fruit token value",
              "type": "string",
              "group": "Options",
              "aliases": []
            },
            {
              "name": "show-inputs-only",
              "group": "Global Options",
              "description": "Show command inputs and do not run the command",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            },
            {
              "name": "base-profile",
              "aliases": [
                "base-p"
              ],
              "group": "Profile Options",
              "description": "The name of a (base) profile to load for this command execution.",
              "type": "string"
            }
          ],
          "customize": {},
          "profile": {
            "optional": [
              "base"
            ]
          },
          "aliases": [],
          "positionals": [],
          "passOn": [],
          "children": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "profiles",
      "description": "Create and manage configuration profiles.",
      "type": "group",
      "deprecatedReplacement": "The 'config init' command",
      "children": [
        {
          "name": "create",
          "description": "Create new configuration profiles.",
          "summary": "Create new configuration profiles",
          "aliases": [
            "cre"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config init' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Create a secured profile",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": true,
                  "group": "Required Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the secured profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Create a base profile",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/CreateProfilesHandler",
              "deprecatedReplacement": "The 'config init' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "overwrite",
                  "aliases": [
                    "ow"
                  ],
                  "description": "Overwrite the base profile when a profile of the same name exists.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "disable-defaults",
                  "aliases": [
                    "dd"
                  ],
                  "description": "Disable populating profile values of undefined properties with default values.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "update",
          "description": "Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
          "summary": "Update existing profiles",
          "aliases": [
            "upd"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Update a secured profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new secured profile. You can load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Update a base profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/UpdateProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the new base profile. You can load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "required": false,
                  "absenceImplications": null,
                  "implies": null,
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "delete",
          "description": "Delete existing profiles.",
          "summary": "Delete existing profiles",
          "aliases": [
            "rm"
          ],
          "type": "group",
          "deprecatedReplacement": "Edit your Zowe V2 configuration imperative-test-cli.config.json",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Delete a secured profile.",
              "description": "Delete a secured profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the secured  profile to be deleted. You can also load this profile by using the name on commands that support the \"--secured-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a secured profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Delete a base profile.",
              "description": "Delete a base profile. You must specify a profile name to be deleted. To find a list of available profiles for deletion, issue the profiles list command. By default, you will be prompted to confirm the profile removal.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/NewDeleteProfilesHandler",
              "deprecatedReplacement": "Edit your Zowe V2 configuration\n    imperative-test-cli.config.json",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "force",
                  "aliases": [],
                  "description": "Force deletion of profile, and dependent profiles if specified. No prompt will be displayed before  deletion occurs.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specifies the name of the base  profile to be deleted. You can also load this profile by using the name on commands that support the \"--base-profile\" option.",
                  "type": "string",
                  "required": true
                }
              ],
              "examples": [
                {
                  "options": "profilename",
                  "description": "Delete a base profile named profilename"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "list",
          "description": "List profiles of the type {{type}}.",
          "summary": "List existing profiles",
          "aliases": [
            "ls"
          ],
          "type": "group",
          "deprecatedReplacement": "The 'config list' command",
          "children": [
            {
              "name": "secured-profiles",
              "aliases": [
                "secured"
              ],
              "summary": "List profiles of the type secured.",
              "description": "Test Secured Fields",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List secured  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type secured"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type secured and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profiles",
              "aliases": [
                "base"
              ],
              "summary": "List profiles of the type base.",
              "description": "Secure Profile",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/ListProfilesHandler",
              "deprecatedReplacement": "The 'config list' command",
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "options": [
                {
                  "name": "show-contents",
                  "aliases": [
                    "sc"
                  ],
                  "description": "List base  profiles  and their contents. All profile details will be printed as part of command output.",
                  "type": "boolean",
                  "required": false,
                  "group": "Options"
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "examples": [
                {
                  "options": "",
                  "description": "List profiles of type base"
                },
                {
                  "options": "--sc",
                  "description": "List profiles of type base and display their contents"
                }
              ],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "set-default",
          "summary": "Set which profiles are loaded by default",
          "description": "Set which profiles are loaded by default.",
          "type": "group",
          "aliases": [
            "set"
          ],
          "deprecatedReplacement": "The 'config set' command",
          "children": [
            {
              "name": "secured-profile",
              "aliases": [
                "secured"
              ],
              "summary": "Set the default\n profiles for the secured group",
              "description": "The secured set default-profiles command allows you to set the default profiles for this command group. When a secured command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the secured group. When you issue commands within the secured group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "secured"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type secured to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            },
            {
              "name": "base-profile",
              "aliases": [
                "base"
              ],
              "summary": "Set the default\n profiles for the base group",
              "description": "The base set default-profiles command allows you to set the default profiles for this command group. When a base command is issued and no profile override options are specified, the default profiles for the command group are automatically loaded for the command based on the commands profile requirements.",
              "type": "command",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\profiles\\builders/../handlers/SetDefaultProfilesHandler",
              "deprecatedReplacement": "The 'config set' command",
              "options": [
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                }
              ],
              "positionals": [
                {
                  "name": "profileName",
                  "description": "Specify a\n profile for default usage within the base group. When you issue commands within the base group without a profile specified as part of the command, the default will be loaded instead.",
                  "type": "string",
                  "required": true
                }
              ],
              "customize": {
                "profileTypeIdentifier": "base"
              },
              "examples": [
                {
                  "options": "profilename",
                  "description": "Set the default profile for type base to the profile named 'profilename'"
                }
              ],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    },
    {
      "name": "auth",
      "description": "Connect to token-based authentication services",
      "type": "group",
      "children": [
        {
          "name": "login",
          "description": "Log in to an authentication service.",
          "summary": "Log in to an authentication service",
          "aliases": [
            "li"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log in to fruit authentication service",
              "description": "Log in to fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "show-token",
                  "aliases": [
                    "st"
                  ],
                  "description": "Show the token when login is successful. If specified, does not save the token to a profile.",
                  "type": "boolean",
                  "group": "Options"
                },
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "user",
                  "description": "Fruit username",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "password",
                  "description": "Fruit password",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        },
        {
          "name": "logout",
          "description": "Log out of an authentication service.",
          "summary": "Log out of an authentication service",
          "aliases": [
            "lo"
          ],
          "type": "group",
          "children": [
            {
              "name": "fruit",
              "type": "command",
              "summary": "Log out of fruit authentication service",
              "description": "Log out of fruit authentication service",
              "handler": "C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/auth/FruitAuthHandler",
              "options": [
                {
                  "name": "info",
                  "description": "The info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "secret",
                  "description": "The secret info the keep in the profile.",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "host",
                  "description": "Fruit host",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "port",
                  "description": "Fruit port",
                  "type": "number",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-type",
                  "description": "Fruit token type",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "token-value",
                  "description": "Fruit token value",
                  "type": "string",
                  "group": "Options",
                  "aliases": []
                },
                {
                  "name": "show-inputs-only",
                  "group": "Global Options",
                  "description": "Show command inputs and do not run the command",
                  "type": "boolean",
                  "aliases": []
                },
                {
                  "name": "response-format-json",
                  "aliases": [
                    "rfj"
                  ],
                  "group": "Global Options",
                  "description": "Produce JSON formatted data from a command",
                  "type": "boolean"
                },
                {
                  "name": "help",
                  "aliases": [
                    "h"
                  ],
                  "group": "Global Options",
                  "description": "Display help text",
                  "type": "boolean"
                },
                {
                  "name": "help-web",
                  "aliases": [
                    "hw"
                  ],
                  "group": "Global Options",
                  "description": "Display HTML help in browser",
                  "type": "boolean"
                },
                {
                  "name": "base-profile",
                  "aliases": [
                    "base-p"
                  ],
                  "group": "Profile Options",
                  "description": "The name of a (base) profile to load for this command execution.",
                  "type": "string"
                }
              ],
              "profile": {
                "optional": [
                  "base"
                ]
              },
              "customize": {},
              "aliases": [],
              "positionals": [],
              "passOn": [],
              "children": []
            }
          ],
          "options": [
            {
              "name": "help-examples",
              "group": "Global Options",
              "description": "Display examples for all the commands in a group",
              "type": "boolean",
              "aliases": []
            },
            {
              "name": "response-format-json",
              "aliases": [
                "rfj"
              ],
              "group": "Global Options",
              "description": "Produce JSON formatted data from a command",
              "type": "boolean"
            },
            {
              "name": "help",
              "aliases": [
                "h"
              ],
              "group": "Global Options",
              "description": "Display help text",
              "type": "boolean"
            },
            {
              "name": "help-web",
              "aliases": [
                "hw"
              ],
              "group": "Global Options",
              "description": "Display HTML help in browser",
              "type": "boolean"
            }
          ],
          "positionals": [],
          "passOn": []
        }
      ],
      "options": [
        {
          "name": "help-examples",
          "group": "Global Options",
          "description": "Display examples for all the commands in a group",
          "type": "boolean",
          "aliases": []
        },
        {
          "name": "response-format-json",
          "aliases": [
            "rfj"
          ],
          "group": "Global Options",
          "description": "Produce JSON formatted data from a command",
          "type": "boolean"
        },
        {
          "name": "help",
          "aliases": [
            "h"
          ],
          "group": "Global Options",
          "description": "Display help text",
          "type": "boolean"
        },
        {
          "name": "help-web",
          "aliases": [
            "hw"
          ],
          "group": "Global Options",
          "description": "Display HTML help in browser",
          "type": "boolean"
        }
      ],
      "aliases": [],
      "positionals": [],
      "passOn": []
    }
  ],
  "type": "group",
  "options": [
    {
      "name": "version",
      "aliases": [
        "V"
      ],
      "description": "Display the current version of Imperative Package Test CLI",
      "type": "boolean",
      "conflictsWith": [
        "available-commands"
      ],
      "group": "Options"
    },
    {
      "name": "available-commands",
      "aliases": [
        "ac"
      ],
      "description": "Displays a list of available commands",
      "type": "boolean",
      "conflictsWith": [
        "version"
      ],
      "group": "Options"
    },
    {
      "name": "response-format-json",
      "aliases": [
        "rfj"
      ],
      "group": "Global Options",
      "description": "Produce JSON formatted data from a command",
      "type": "boolean"
    },
    {
      "name": "help",
      "aliases": [
        "h"
      ],
      "group": "Global Options",
      "description": "Display help text",
      "type": "boolean"
    },
    {
      "name": "help-web",
      "aliases": [
        "hw"
      ],
      "group": "Global Options",
      "description": "Display HTML help in browser",
      "type": "boolean"
    }
  ],
  "handler": "C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src/handlers/DefaultRootCommandHandler",
  "isRoot": true,
  "aliases": [],
  "positionals": [],
  "passOn": [
    {
      "property": "options",
      "value": {
        "name": "help-examples",
        "group": "Global Options",
        "description": "Display examples for all the commands in a group",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "command"
        }
      ],
      "merge": true
    },
    {
      "property": "options",
      "value": {
        "name": "show-inputs-only",
        "group": "Global Options",
        "description": "Show command inputs and do not run the command",
        "type": "boolean"
      },
      "ignoreNodes": [
        {
          "type": "group"
        }
      ],
      "merge": true
    }
  ]
}
[2023/06/29 15:34:50.435] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:50.437] [TRACE] [YargsDefiner.js:61] {
  name: 'test',
  description: 'Test that various imperative features are working',
  summary: 'Test imperative features',
  type: 'group',
  children: [
    {
      name: 'logging',
      description: 'Test that logging is working correctly.',
      summary: 'Test imperative logging',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\logging/Logging.handler',
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-auto-store',
      description: 'Read some config',
      summary: 'Read some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-auto-store/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'test-config-override',
      description: 'Override some config',
      summary: 'Override some config',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\config-override/Config.handler',
      profile: [Object],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'masking',
      description: 'Test that masking is working correctly.',
      summary: 'Test imperative masking',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler',
      positionals: [Array],
      options: [Array],
      aliases: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:50.438] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:50.440] [TRACE] [YargsDefiner.js:61] {
  name: 'config',
  type: 'group',
  summary: 'Manage JSON project and global configuration',
  description: 'Manage JSON project and global configuration',
  children: [
    {
      name: 'list',
      aliases: [Array],
      type: 'command',
      summary: 'list config properties',
      description: 'List config properties',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\list\\list.handler',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'secure',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\secure\\secure.handler',
      summary: 'secure configuration properties',
      description: 'prompt for secure configuration properties',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'set',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\set\\set.handler',
      summary: 'set configuration property',
      description: 'create or update a configuration property',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'init',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\init\\init.handler',
      summary: 'init config files',
      description: 'Initialize config files. Defaults to initializing "imperative-test-cli.config.json" in the current working directory unless otherwise specified.\n' +
        '\n' +
        'Use "--user-config" to init "imperative-test-cli.config.user.json". Use "--global-config" to initialize the configuration files in your home "~/.zowe" directory.\n' +
        '\n' +
        'Use "--no-prompt" to skip prompting for values in a CI environment.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'schema',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\schema\\schema.handler',
      summary: 'dumps the JSON schema for the config',
      description: "Dumps the JSON schema for the config. The schema is dynamically created based on your available plugins. Direct the output of this command to a file and include in your config with '$schema' property to get editor completion.",
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'profiles',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\profiles\\profiles.handler',
      summary: 'displays profile paths',
      description: 'Displays profile paths.',
      examples: [Array],
      options: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'edit',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\edit\\edit.handler',
      summary: 'edit config files',
      description: "Edit an existing config file in your system's default text editor.\n" +
        '\n' +
        'In a graphical environment, the application associated with JSON files will be launched. In a command-line environment, vi will be launched. To override the command-line editor used, specify it in the IMPERATIVE_TEST_CLI_EDITOR environment variable.',
      options: [Array],
      examples: [Array],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'import',
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\import\\import.handler',
      summary: 'import config files',
      description: 'Import config files from another location on disk or from an Internet URL.\n' +
        '\n' +
        'If the config `$schema` property points to a relative path, the schema will also be imported.',
      positionals: [Array],
      options: [Array],
      examples: [Array],
      aliases: [],
      passOn: [],
      children: []
    },
    {
      name: 'convert-profiles',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\convert-profiles\\convert-profiles.handler',
      summary: 'Convert profiles to team config',
      description: 'Convert v1 profiles to a global imperative-test-cli.config.json file.',
      options: [Array],
      examples: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'report-env',
      aliases: [Array],
      type: 'command',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\report-env\\Report-env.handler',
      summary: 'Report the state of your working environment',
      description: 'Reports key items from your environment and identifies problem conditions',
      examples: [Array],
      options: [Array],
      positionals: [],
      passOn: [],
      children: []
    },
    {
      name: 'update-schemas',
      aliases: [Array],
      type: 'command',
      summary: 'update schema files',
      description: 'Update schema files by looking up the directory structure.\n' +
        '\n' +
        'Schema files up in higher level directories will always be updated. To also update schema files down in lower level directories, specify the `--depth` flag.',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\lib\\imperative\\src\\config\\cmd\\update-schemas\\update-schemas.handler',
      positionals: [],
      options: [Array],
      examples: [Array],
      passOn: [],
      children: []
    },
    {
      name: 'auto-init',
      type: 'command',
      summary: 'Automatically generate a config from Fruit Manager',
      description: 'Automatically generate a config from Fruit Manager',
      handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib/cli/config/FruitAutoInitHandler',
      options: [Array],
      customize: {},
      profile: [Object],
      aliases: [],
      positionals: [],
      passOn: [],
      children: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:50.442] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:50.442] [TRACE] [YargsDefiner.js:61] {
  name: 'profiles',
  description: 'Create and manage configuration profiles.',
  type: 'group',
  deprecatedReplacement: "The 'config init' command",
  children: [
    {
      name: 'create',
      description: 'Create new configuration profiles.',
      summary: 'Create new configuration profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config init' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'update',
      description: 'Update a {{type}} profile. You can update any property present within the profile configuration. The updated profile will be printed so that you can review the result of the updates.',
      summary: 'Update existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'delete',
      description: 'Delete existing profiles.',
      summary: 'Delete existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: 'Edit your Zowe V2 configuration imperative-test-cli.config.json',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'list',
      description: 'List profiles of the type {{type}}.',
      summary: 'List existing profiles',
      aliases: [Array],
      type: 'group',
      deprecatedReplacement: "The 'config list' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'set-default',
      summary: 'Set which profiles are loaded by default',
      description: 'Set which profiles are loaded by default.',
      type: 'group',
      aliases: [Array],
      deprecatedReplacement: "The 'config set' command",
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:50.444] [TRACE] [YargsDefiner.js:60] Defining a new definition to Yargs:
[2023/06/29 15:34:50.444] [TRACE] [YargsDefiner.js:61] {
  name: 'auth',
  description: 'Connect to token-based authentication services',
  type: 'group',
  children: [
    {
      name: 'login',
      description: 'Log in to an authentication service.',
      summary: 'Log in to an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    },
    {
      name: 'logout',
      description: 'Log out of an authentication service.',
      summary: 'Log out of an authentication service',
      aliases: [Array],
      type: 'group',
      children: [Array],
      options: [Array],
      positionals: [],
      passOn: []
    }
  ],
  options: [
    {
      name: 'help-examples',
      group: 'Global Options',
      description: 'Display examples for all the commands in a group',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [Array],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [Array],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  positionals: [],
  passOn: []
}
[2023/06/29 15:34:50.445] [TRACE] [main.js:18] This is a trace message after init!
[2023/06/29 15:34:50.446] [DEBUG] [main.js:19] This is a debug message after init!
[2023/06/29 15:34:50.447] [INFO] [main.js:20] This is an info message after init!
[2023/06/29 15:34:50.449] [WARN] [main.js:21] This is a warn message after init!
[2023/06/29 15:34:50.450] [ERROR] [main.js:22] This is an error message after init!
[2023/06/29 15:34:50.451] [FATAL] [main.js:23] This is a fatal message after init!
[2023/06/29 15:34:50.458] [DEBUG] [CommandYargs.js:76] Defining command: logging
[2023/06/29 15:34:50.459] [DEBUG] [CommandYargs.js:175] Building positional string from: logging
[2023/06/29 15:34:50.460] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:50.461] [DEBUG] [CommandYargs.js:76] Defining command: test-config-auto-store
[2023/06/29 15:34:50.462] [DEBUG] [CommandYargs.js:175] Building positional string from: test-config-auto-store
[2023/06/29 15:34:50.463] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:50.463] [DEBUG] [CommandYargs.js:76] Defining command: test-config-override
[2023/06/29 15:34:50.464] [DEBUG] [CommandYargs.js:175] Building positional string from: test-config-override
[2023/06/29 15:34:50.466] [DEBUG] [CommandYargs.js:181] Positional String: 
[2023/06/29 15:34:50.466] [DEBUG] [CommandYargs.js:76] Defining command: masking
[2023/06/29 15:34:50.467] [DEBUG] [CommandYargs.js:175] Building positional string from: masking
[2023/06/29 15:34:50.468] [DEBUG] [CommandYargs.js:181] Positional String:  [test-argument]
[2023/06/29 15:34:50.470] [DEBUG] [CommandYargs.js:95] Defining command builder for: masking
[2023/06/29 15:34:50.476] [DEBUG] [CommandYargs.js:106] Handler invoked for: masking
[2023/06/29 15:34:50.476] [DEBUG] [CommandYargs.js:119] Executing Handlers: masking
[2023/06/29 15:34:50.477] [DEBUG] [CommandYargs.js:137] Executing Handlers (1 total)
[2023/06/29 15:34:50.498] [INFO] [CommandProcessor.js:271] Invoking command "masking"...
[2023/06/29 15:34:50.515] [INFO] [CommandProcessor.js:272] Command issued:

imperative-test-cli test masking **** --rfj


[2023/06/29 15:34:50.516] [TRACE] [CommandProcessor.js:273] Invoke parameters:
{
  arguments: {
    _: [ 'test', 'masking' ],
    rfj: true,
    'response-format-json': true,
    responseFormatJson: true,
    version: undefined,
    V: undefined,
    'available-commands': undefined,
    ac: undefined,
    availableCommands: undefined,
    help: undefined,
    h: undefined,
    'help-web': undefined,
    hw: undefined,
    helpWeb: undefined,
    'help-examples': undefined,
    helpExamples: undefined,
    'show-inputs-only': undefined,
    showInputsOnly: undefined,
    '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
    'test-argument': 'secret',
    testArgument: 'secret'
  },
  silent: false,
  responseFormat: 'json'
}
[2023/06/29 15:34:50.516] [TRACE] [CommandProcessor.js:274] Command definition:
{
  name: 'masking',
  description: 'Test that masking is working correctly.',
  summary: 'Test imperative masking',
  type: 'command',
  handler: 'C:\\ourstuff\\repos\\dev\\imperative\\__tests__\\__integration__\\imperative\\lib\\cli\\test\\masking/Masking.handler',
  positionals: [
    {
      name: 'test-argument',
      description: 'test argument',
      type: 'string',
      required: true
    }
  ],
  options: [
    {
      name: 'show-inputs-only',
      group: 'Global Options',
      description: 'Show command inputs and do not run the command',
      type: 'boolean',
      aliases: []
    },
    {
      name: 'response-format-json',
      aliases: [ 'rfj' ],
      group: 'Global Options',
      description: 'Produce JSON formatted data from a command',
      type: 'boolean'
    },
    {
      name: 'help',
      aliases: [ 'h' ],
      group: 'Global Options',
      description: 'Display help text',
      type: 'boolean'
    },
    {
      name: 'help-web',
      aliases: [ 'hw' ],
      group: 'Global Options',
      description: 'Display HTML help in browser',
      type: 'boolean'
    }
  ],
  aliases: [],
  passOn: [],
  children: []
}
[2023/06/29 15:34:50.517] [TRACE] [CommandProcessor.js:852] Constructing response object for "masking" command...
[2023/06/29 15:34:50.518] [INFO] [CommandProcessor.js:307] Preparing (loading profiles, reading stdin, etc.) execution of "masking" command...
[2023/06/29 15:34:50.519] [TRACE] [CommandProcessor.js:717] Base set of arguments from Yargs parse:
{
  _: [ 'test', 'masking' ],
  rfj: true,
  'response-format-json': true,
  responseFormatJson: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:50.519] [TRACE] [CommandProcessor.js:720] Set of options and positionals defined on the command:
[
  {
    name: 'show-inputs-only',
    group: 'Global Options',
    description: 'Show command inputs and do not run the command',
    type: 'boolean',
    aliases: []
  },
  {
    name: 'response-format-json',
    aliases: [ 'rfj' ],
    group: 'Global Options',
    description: 'Produce JSON formatted data from a command',
    type: 'boolean'
  },
  {
    name: 'help',
    aliases: [ 'h' ],
    group: 'Global Options',
    description: 'Display help text',
    type: 'boolean'
  },
  {
    name: 'help-web',
    aliases: [ 'hw' ],
    group: 'Global Options',
    description: 'Display HTML help in browser',
    type: 'boolean'
  },
  {
    name: 'test-argument',
    description: 'test argument',
    type: 'string',
    required: true
  }
]
[2023/06/29 15:34:50.521] [TRACE] [CommandProcessor.js:725] Arguments extracted from :
{
  _: [ 'test', 'masking' ],
  rfj: true,
  'response-format-json': true,
  responseFormatJson: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:50.521] [TRACE] [CommandProcessor.js:727] Arguments merged :
{
  _: [ 'test', 'masking' ],
  rfj: true,
  'response-format-json': true,
  responseFormatJson: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:50.522] [TRACE] [CommandProcessor.js:729] Reading stdin for "masking" command...
[2023/06/29 15:34:50.523] [DEBUG] [SharedOptions.js:61] Standard input reading not requested. Skipping stdin read
[2023/06/29 15:34:50.541] [TRACE] [CommandProcessor.js:788] Arguments extracted from the config:
{}
[2023/06/29 15:34:50.542] [TRACE] [CommandProcessor.js:791] Loading profiles for "masking" command. Profile definitions: undefined
[2023/06/29 15:34:50.542] [TRACE] [CommandProfileLoader.js:53] Profile loader created for command: masking
[2023/06/29 15:34:50.543] [INFO] [CommandProfileLoader.js:83] Request to load profiles for command: masking...
[2023/06/29 15:34:50.544] [TRACE] [CommandProfileLoader.js:84] Profile load arguments supplied:
{
  _: [ 'test', 'masking' ],
  rfj: true,
  'response-format-json': true,
  responseFormatJson: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:50.544] [TRACE] [CommandProcessor.js:797] Profiles loaded for "masking" command:
CommandProfiles { mMetaMap: Map(0) {}, mMap: Map(0) {} }
[2023/06/29 15:34:50.545] [TRACE] [CommandProcessor.js:828] Full argument object constructed:
{
  _: [ 'test', 'masking' ],
  rfj: true,
  'response-format-json': true,
  responseFormatJson: true,
  '$0': '..\\..\\..\\..\\..\\.npm-global\\node_modules\\imperative-test-cli\\lib\\main.js',
  'test-argument': 'secret',
  testArgument: 'secret'
}
[2023/06/29 15:34:50.545] [TRACE] [CommandProcessor.js:852] Constructing response object for "masking" command...
[2023/06/29 15:34:50.546] [INFO] [CommandProcessor.js:211] Performing syntax validation for command "masking"...
[2023/06/29 15:34:50.563] [TRACE] [SyntaxValidator.js:115] no unknown positionals. Length of positional arguments was: %s. Contents of _ were %s, Expected "_" to have length of %s
[2023/06/29 15:34:50.573] [INFO] [CommandProcessor.js:467] Invoking process method of handler for "masking" command.
[2023/06/29 15:34:50.574] [INFO] [CommandProcessor.js:879] Requiring handler "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler" for command "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler"...
[2023/06/29 15:34:50.576] [INFO] [CommandProcessor.js:882] Handler "C:\ourstuff\repos\dev\imperative\__tests__\__integration__\imperative\lib\cli\test\masking/Masking.handler" for command "masking" successfully loaded/required.
[2023/06/29 15:34:50.586] [TRACE] [Masking.handler.js:38] Test-Masking: imperative logger: trace message: secret
[2023/06/29 15:34:50.587] [DEBUG] [Masking.handler.js:39] Test-Masking: imperative logger: debug message: ****
[2023/06/29 15:34:50.588] [INFO] [Masking.handler.js:40] Test-Masking: imperative logger: info message: ****
[2023/06/29 15:34:50.588] [WARN] [Masking.handler.js:41] Test-Masking: imperative logger: warn message: ****
[2023/06/29 15:34:50.589] [ERROR] [Masking.handler.js:42] Test-Masking: imperative logger: error message: ****
[2023/06/29 15:34:50.590] [FATAL] [Masking.handler.js:43] Test-Masking: imperative logger: fatal message: ****
[2023/06/29 15:34:50.595] [INFO] [CommandProcessor.js:498] Handler for command "masking" succeeded.
[2023/06/29 15:34:50.597] [INFO] [CommandProcessor.js:933] Command "masking" completed with success flag: "true"
[2023/06/29 15:34:50.598] [TRACE] [CommandProcessor.js:934] Command "masking" finished. Response object:
{
  success: true,
  exitCode: 0,
  message: '',
  stdout: <Buffer 54 65 73 74 2d 4d 61 73 6b 69 6e 67 3a 20 63 6f 6e 73 6f 6c 65 20 6c 6f 67 67 65 72 3a 20 6c 6f 67 20 6d 65 73 73 61 67 65 3a 20 2a 2a 2a 2a 0a>,
  stderr: <Buffer 54 65 73 74 2d 4d 61 73 6b 69 6e 67 3a 20 63 6f 6e 73 6f 6c 65 20 6c 6f 67 67 65 72 3a 20 65 72 72 6f 72 20 6d 65 73 73 61 67 65 3a 20 2a 2a 2a 2a 0a ... 57 more bytes>,
  data: {},
  error: undefined
}
